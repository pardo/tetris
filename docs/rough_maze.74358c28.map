{"version":3,"sources":["helpers.js","piece.js","block.js","ground.js","tetris.js","node_modules/roughjs/bin/path.js","node_modules/roughjs/bin/geometry.js","node_modules/roughjs/bin/utils/hachure.js","node_modules/roughjs/bin/fillers/filler-utils.js","node_modules/roughjs/bin/fillers/hachure-filler.js","node_modules/roughjs/bin/fillers/zigzag-filler.js","node_modules/roughjs/bin/fillers/hatch-filler.js","node_modules/roughjs/bin/fillers/dot-filler.js","node_modules/roughjs/bin/fillers/filler.js","node_modules/roughjs/bin/renderer.js","node_modules/roughjs/bin/renderer-factory.js","node_modules/roughjs/bin/generator-base.js","node_modules/roughjs/bin/generator.js","node_modules/roughjs/bin/canvas-base.js","node_modules/roughjs/bin/canvas.js","node_modules/roughjs/bin/generator-async.js","node_modules/roughjs/bin/canvas-async.js","node_modules/roughjs/bin/svg-base.js","node_modules/roughjs/bin/svg.js","node_modules/roughjs/bin/svg-async.js","node_modules/roughjs/bin/rough.js","drawable.js","node_modules/js-binarypack/lib/bufferbuilder.js","node_modules/js-binarypack/lib/binarypack.js","node_modules/peerjs/lib/adapter.js","node_modules/peerjs/lib/util.js","node_modules/eventemitter3/index.js","node_modules/peerjs/lib/socket.js","node_modules/peerjs/lib/negotiator.js","node_modules/peerjs/lib/mediaconnection.js","node_modules/reliable/lib/util.js","node_modules/reliable/lib/reliable.js","node_modules/peerjs/lib/dataconnection.js","node_modules/peerjs/lib/peer.js","htmlgame.js","main.js","index.js"],"names":["getElementSize","goFullscreen","elem","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","FisherYatesShuffle","myArray","i","j","tempi","tempj","length","Math","floor","random","range","start","end","step","arguments","push","distancePoints","p1","p2","sqrt","pow","x","y","distanceXY","x1","y1","x2","y2","rad2deg","d","deg2rad","angleBetweenXY","a","atan2","log","PI","pointFollowingAnglePoint","pos","angle","distance","cos","sin","mapObj","func","obj","keys","Object","result","getWindowSizePoint","winW","winH","document","body","offsetWidth","offsetHeight","compatMode","documentElement","window","innerWidth","innerHeight","element","downloadText","filename","text","pom","createElement","setAttribute","encodeURIComponent","click","getId","base62","str","debounce","wait","immediate","timeout","context","args","callNow","setTimeout","apply","throttle","throttling","more","whenDone","changeColorLuminance","hex","lum","String","replace","rgb","c","parseInt","substr","round","min","max","toString","randomHexColor","isTouchDevice","Piece","PiecesShapes","type","options","initialize","piece","assign","hard","color","shapes","offset","shapeIndex","rotateClockwise","rotateCounterClockwise","draw","groundObject","placeOnGround","collide","outside","method","ground","pattern","block","shouldDrawALine","p","xground","yground","e","empty","setColor","lines","Block","TOP_LINE","RIGHT_LINE","BOTTOM_LINE","LEFT_LINE","ALL_LINES","toLines","points","index","drawBlock","drawable","data","roughCanvas","margin","size","left","right","top","bottom","b","f","g","h","k","l","n","o","topLeftPoints","topRightPoints","bottomRightPoints","bottomLeftPoints","topPoints","rightPoints","bottomPoints","leftPoints","hachureAngle","concat","polygon","lineOptions","strokeColor","forEach","line","drawEmpty","getLinesAsNumber","drawOriginal","rectangle","emptyColor","drawBlockLines","copyFrom","setPos","setSize","Ground","groundWidth","groundHeight","blockSize","addRandomBottom","w","hide","mapGroundBlocks","setBlockSize","meld","callback","ended","getCompletedLines","completedLines","complete","removeLine","ht","removeLines","drawGrid","gridOptions","map","position","blocks","col","Tetris","width","newPiecePosition","currentPieceGround","reset","count","piecePosition","nextPiece","groundDirty","currentPieceGroundDirty","serialize","previousUpdate","serializedGround","cpb","blockToPush","loadSerializedData","slice","drawPieceGround","drawablePieces","clear","bind","drawGround","drawableBackground","rotatePiece","action","reverseAction","tmpPos","rotatePieceClockwise","rotatePieceCounterClockwise","pieceMove","offsetX","newPos","pieceMoveLeft","pieceMoveRight","pieceMoveDown","linesCount","linesRemovedCallback","pieces","newPieceCallback","gameEndedCallback","auto","speed","resize","getPoints","makeNextPieceHardOne","numberOfLines","undefined","ceil","tetris","currentPiece","PathFitter","isType","token","PARAMS","ParsedPath","COMMAND","NUMBER","EOD","segments","parseData","processPoints","tokens","Array","match","RegExp","$1","error","parseFloat","tokenize","mode","param_length","params","numbeToken","segment","key","closed","_closed","s","toLowerCase","first","currentPoint","point","RoughPath","_position","_first","bezierReflectionPoint","quadReflectionPoint","parsed","linearPoints","_linearPoints","lp","v","RoughArcConverter","from","to","radii","largeArcFlag","sweepFlag","_segIndex","_numSegs","_rx","_ry","_sinPhi","_cosPhi","_C","_theta","_delta","_T","_from","radPerDeg","abs","x1dash","y1dash","root","numerator","cxdash","cydash","calculateVectorAngle","dtheta","cosTheta1","sinTheta1","theta2","cosTheta2","sinTheta2","cp1","cp2","ux","uy","vx","vy","ta","tb","sets","simplification","outSets","set","estLength","reduce","areas","minArea","minIndex","area","splice","Segment","xi","Number","MAX_VALUE","yi","px1","py1","px2","py2","_undefined","otherSegment","isUndefined","grad1","grad2","int1","int2","HachureIterator","gap","sinAngle","cosAngle","tanAngle","deltaX","hGap","sLeft","sRight","xLower","xUpper","yLower","yUpper","intersects","lineLength","getIntersectingLines","affine","hachureLinesForPolygon","hachureLinesForEllipse","intersections","s1","s2","cx","cy","sinAnglePrime","cosAnglePrime","R","ret","hachureGap","strokeWidth","tan","it","rect","nextLine","height","renderer","rx","ry","getOffset","fweight","fillWeight","aspectRatio","hyp","gapPrime","halfLen","xPos","HachureFiller","_fillPolygon","_fillEllipse","connectEnds","ops","renderLines","prevPoint","doubleLine","ZigZagFiller","HatchFiller","o2","set2","DotFiller","curveStepCount","dotsOnLines","dl","alpha","atan","dy","dx","ellipse","getFiller","fillers","fillerName","fillStyle","RoughRenderer","close","len","linearPath","o1","_curveWithOffset","roughness","increment","_ellipse","stop","roughClosure","strt","stp","ellipseInc","arcInc","_arc","op","path","fitter","fit","prev","opList","_processSegment","maxRandomnessOffset","filler","fillPolygon","fillEllipse","patternFillPolygon","_line","move","overlay","lengthSq","halfOffset","divergePoint","midDispX","bowing","midDispY","closePoint","curveTightness","cachedVertArray","ro","overlap","radOffset","_curve","ps","ros","setPosition","seg","prevSeg","delta","ob","_bezierTo","prevKey","ref","offset1","offset2","arcConverter","getNextSegment","createRenderer","hasSelf","self","roughScript","currentScript","src","config","workly","async","noWorker","worklySource","worklyURL","code","ourl","URL","createObjectURL","Blob","proxy","RoughGeneratorBase","surface","defaultOptions","_options","shape","lib","val","baseVal","value","ns","svg","createElementNS","pathNode","appendChild","bb","getBBox","removeChild","err","canvasSize","getCanvasSize","paths","drawing","opsToPath","stroke","fill","fillSketch","item","trim","RoughGenerator","_drawable","solidFillPolygon","patternFillEllipse","diameter","arc","patternFillArc","curve","computePolygonSize","fillPoints","polygonPath","computePathSize","svgPath","RoughCanvasBase","hasDocument","canvas","ctx","getContext","getDefaultOptions","save","strokeStyle","lineWidth","_drawToContext","restore","p2d","Path2D","doc","ownerDocument","hcanvas","hcontext","bbox","computeBBox","translate","createPattern","beginPath","moveTo","bezierCurveTo","quadraticCurveTo","lineTo","RoughCanvas","gen","generator","circle","RoughGeneratorAsync","RoughCanvasAsync","genAsync","RoughSVGBase","defs","_defs","dnode","firstChild","insertBefore","style","id","MAX_SAFE_INTEGER","patternPath","RoughSVG","RoughSVGAsync","Drawable","createAndAppend","parent","context2d","rough","getSize","clearRect","HTMLTetrisGame","sendGroundLoopInterval","createHtmlElements","createDrawables","createTetrisGame","attachWindowEvents","playable","startPieceMoveDownLoop","startDrawLoop","handleResize","addReplica","conn","replica","sendGroundLoop","on","destroy","addEventListener","createPeer","handleKeyboardEvent","background","half","className","elementInner","moveDown","moveLeft","moveRight","event","which","name","prompt","connect","setInterval","send","anotherName","peer","Peer","getElementById","game","Game"],"mappings":"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","file":"rough_maze.74358c28.map","sourceRoot":"..","sourcesContent":["function goFullscreen (elem) {\n  if (elem.requestFullscreen) {\n    elem.requestFullscreen()\n  } else if (elem.msRequestFullscreen) {\n    elem.msRequestFullscreen()\n  } else if (elem.mozRequestFullScreen) {\n    elem.mozRequestFullScreen()\n  } else if (elem.webkitRequestFullscreen) {\n    elem.webkitRequestFullscreen()\n  }\n}\n\nfunction FisherYatesShuffle (myArray) {\n  var i = myArray.length\n  var j\n  var tempi\n  var tempj\n  if (i === 0) return false\n  while (--i) {\n    j = Math.floor(Math.random() * (i + 1))\n    tempi = myArray[i]\n    tempj = myArray[j]\n    myArray[i] = tempj\n    myArray[j] = tempi\n  }\n  return myArray\n}\n\nfunction range (start, end, step) {\n  var range = []\n  var i\n  switch (arguments.length) {\n    case 1:\n      for (i = 0; i < start; i++) { range.push(i) }\n      break\n    case 2:\n      if (end > start) {\n        for (i = start; i < end; i++) { range.push(i) }\n      } else {\n        for (i = start; i > end; i--) { range.push(i) }\n      }\n      break\n    case 3:\n      if (start < end && step > 0) {\n        for (i = start; i < end;) { range.push(i); i += step }\n      } else if (start > end && step < 0) {\n        for (i = start; i > end;) { range.push(i); i += step }\n      }\n      break\n  }\n  return range\n}\n\nfunction distancePoints (p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2))\n}\n\nfunction distanceXY (x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n}\n\n// 57.29577951308232 = 180 / Math.PI\nfunction rad2deg (d) {\n  return d * 57.29577951308232\n}\n\nfunction deg2rad (d) {\n  return d / 57.29577951308232\n}\n\nfunction angleBetweenXY (x1, y1, x2, y2) {\n  var a = Math.atan2(y2 - y1, x2 - x1)\n  console.log(a)\n  if (a < 0) { a += Math.PI * 2 }\n  return a\n}\n\nfunction pointFollowingAnglePoint (pos, angle, distance) {\n  // angle should be radians\n  // 0-360 0 mean east 90 south 180 west 270 north in degrees\n  return {\n    x: pos.x + Math.cos(angle) * distance,\n    y: pos.y + Math.sin(angle) * distance\n  }\n}\n\nfunction mapObj (func, obj) {\n  // iterate over objects keys\n  // func(obj , key, index)\n  var keys = Object.keys(obj)\n  var result = []\n  for (var i = 0; i < keys.length; i++) {\n    result.push(\n      func(obj[keys[i]], keys[i], i)\n    )\n  }\n  return result\n}\n\nfunction getWindowSizePoint () {\n  var winW = 0\n  var winH = 0\n  if (document.body && document.body.offsetWidth) {\n    winW = document.body.offsetWidth\n    winH = document.body.offsetHeight\n  }\n  if (document.compatMode === 'CSS1Compat' &&\n  document.documentElement &&\n  document.documentElement.offsetWidth) {\n    winW = document.documentElement.offsetWidth\n    winH = document.documentElement.offsetHeight\n  }\n  if (window.innerWidth && window.innerHeight) {\n    winW = window.innerWidth\n    winH = window.innerHeight\n  }\n  return {\n    width: winW,\n    height: winH\n  }\n}\n\nfunction getElementSize (element) {\n  return {\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  }\n}\n\nfunction downloadText (filename, text) {\n  // download content as a data test\n  var pom = document.createElement('a')\n  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text))\n  pom.setAttribute('download', filename)\n  pom.click()\n}\n\nfunction getId (length) {\n  // with a length of 6 the first collision occurs after more than 9000000 of ids\n  var base62 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var str = ''\n  length = length || 10\n  for (let i = 0; i < length; i++) {\n    str += base62[Math.floor(Math.random() * 62)]\n  }\n  return str\n}\n// extracted from underscore\nfunction debounce (func, wait, immediate) {\n  var timeout\n  var result\n  return function () {\n    var context = this\n    var args = arguments\n    var later = function () {\n      timeout = null\n      if (!immediate) result = func.apply(context, args)\n    }\n    var callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) result = func.apply(context, args)\n    return result\n  }\n}\n\nfunction throttle (func, wait) {\n  var context\n  var args\n  var timeout\n  var throttling\n  var more\n  var result\n  var whenDone = debounce(function () { more = throttling = false }, wait)\n  return function () {\n    context = this\n    args = arguments\n    var later = function () {\n      timeout = null\n      if (more) func.apply(context, args)\n      whenDone()\n    }\n    if (!timeout) timeout = setTimeout(later, wait)\n    if (throttling) {\n      more = true\n    } else {\n      result = func.apply(context, args)\n    }\n    whenDone()\n    throttling = true\n    return result\n  }\n}\n\nfunction changeColorLuminance (hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, '')\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  lum = lum || 0\n  // convert to decimal and change luminosity\n  var rgb = '#'\n  var c\n  var i\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16)\n    c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16)\n    rgb += ('00' + c).substr(c.length)\n  }\n  return rgb\n}\n\nfunction randomHexColor () {\n  var rgb = '#'\n  var c\n  var i\n  for (i = 0; i < 3; i++) {\n    c = Math.random() * 256\n    c = Math.round(Math.min(Math.max(0, c), 255)).toString(16)\n    rgb += ('00' + c).substr(c.length)\n  }\n  return rgb\n}\n\nfunction isTouchDevice () {\n  return 'ontouchstart' in window || 'onmsgesturechange' in window\n}\n\nexport {\n  debounce,\n  throttle,\n  getId,\n  downloadText,\n  getWindowSizePoint,\n  mapObj,\n  pointFollowingAnglePoint,\n  angleBetweenXY,\n  deg2rad,\n  rad2deg,\n  distancePoints,\n  distanceXY,\n  range,\n  FisherYatesShuffle,\n  goFullscreen,\n  isTouchDevice,\n  changeColorLuminance,\n  randomHexColor,\n  getElementSize\n}\n","import {FisherYatesShuffle} from './helpers'\n\nvar PiecesShapes = {}\n\nPiecesShapes['is'] = {\n  color: '#64b0ff',\n  shapes: [\n    [\n      [1, 1, 0],\n      [0, 1, 1],\n      [0, 0, 0]\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['s'] = {\n  color: '#008f32',\n  shapes: [\n    [\n      [0, 1, 1],\n      [1, 1, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['il'] = {\n  color: '#ea9e22',\n  shapes: [\n    [\n      [1, 1, 1],\n      [0, 0, 1],\n      [0, 0, 0]\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0]\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 1],\n      [0, 0, 0]\n    ],\n    [\n      [1, 1, 0],\n      [1, 0, 0],\n      [1, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['l'] = {\n  color: '#f26aff',\n  shapes: [\n    [\n      [1, 1, 1],\n      [1, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0]\n    ],\n    [\n      [0, 0, 1],\n      [1, 1, 1],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [1, 0, 0],\n      [1, 1, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['c'] = {\n  color: '#4240ff',\n  shapes: [\n    [\n      [1, 1],\n      [1, 1]\n    ]\n  ],\n  offset: [0, 0]\n}\n\nPiecesShapes['t'] = {\n  // color: \"#6b6d00\",\n  // color: \"#afaf24\",\n  color: '#afcf30',\n  shapes: [\n    [\n      [1, 1, 1],\n      [0, 1, 0],\n      [0, 0, 0]\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 1, 0]\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 0],\n      [1, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['i'] = {\n  color: '#b53120',\n  shapes: [\n    [\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]\n    ],\n    [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['w'] = {\n  color: '#ffdd00',\n  shapes: [\n    [\n      [1, 1, 0, 0],\n      [0, 1, 1, 0],\n      [0, 0, 1, 1],\n      [0, 0, 0, 1]\n    ],\n    [\n      [0, 0, 0, 1],\n      [0, 0, 1, 1],\n      [0, 1, 1, 0],\n      [1, 1, 0, 0]\n    ],\n    [\n      [1, 0, 0, 0],\n      [1, 1, 0, 0],\n      [0, 1, 1, 0],\n      [0, 0, 1, 1]\n    ],\n    [\n      [0, 0, 1, 1],\n      [0, 1, 1, 0],\n      [1, 1, 0, 0],\n      [1, 0, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['o'] = {\n  color: '#04a0fb',\n  shapes: [\n    [\n      [0, 1, 1, 0],\n      [1, 0, 0, 1],\n      [0, 1, 1, 0],\n      [0, 0, 0, 0]\n    ],\n    [\n      [0, 1, 0, 0],\n      [1, 0, 1, 0],\n      [1, 0, 1, 0],\n      [0, 1, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['ii'] = {\n  color: '#ec1346',\n  shapes: [\n    [\n      [1, 0, 0, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 0, 0, 1]\n    ],\n    [\n      [1, 0, 1, 0],\n      [0, 0, 0, 0],\n      [1, 0, 1, 0],\n      [0, 0, 0, 0]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nPiecesShapes['ca'] = {\n  color: '#ec1346',\n  shapes: [\n    [\n      [1, 1, 0],\n      [1, 0, 0],\n      [1, 1, 0]\n    ],\n    [\n      [1, 1, 1],\n      [1, 0, 1],\n      [0, 0, 0]\n    ],\n    [\n      [0, 1, 1],\n      [0, 0, 1],\n      [0, 1, 1]\n    ],\n    [\n      [0, 0, 0],\n      [1, 0, 1],\n      [1, 1, 1]\n    ]\n  ],\n  offset: [1, 0]\n}\n\nfunction Piece (type, options) {\n  this.initialize = function (type) {\n    // pieces first Y then X\n    this.options = {\n      hard: false\n    }\n    Object.assign(this.options, options)\n\n    var piece\n    if (type) {\n      piece = PiecesShapes[type]\n    }\n    if (!piece) {\n      if (this.options.hard) {\n        type = FisherYatesShuffle(['w', 'o', 'ii', 'ca'])[0]\n      } else {\n        type = FisherYatesShuffle(['c', 's', 'is', 'i', 'l', 'il', 't'])[0]\n      }\n      piece = PiecesShapes[type]\n    }\n    this.type = type\n    this.color = piece.color\n    this.shapes = piece.shapes\n    this.offset = piece.offset\n    this.shapeIndex = 0\n  }\n\n  this.rotateClockwise = function () {\n    this.shapeIndex += 1\n    this.shapeIndex = this.shapeIndex >= this.shapes.length ? 0 : this.shapeIndex\n  }\n\n  this.rotateCounterClockwise = function () {\n    this.shapeIndex -= 1\n    this.shapeIndex = this.shapeIndex < 0 ? this.shapes.length - 1 : this.shapeIndex\n  }\n\n  this.draw = function (groundObject, pos) {\n    // this updates all the blocks on the groundObject to draw the piece\n    return this.placeOnGround(groundObject, pos, 'draw')\n  }\n  this.collide = function (groundObject, pos) {\n    // check if the piece collides with the ground at position\n    return this.placeOnGround(groundObject, pos, 'collide')\n  }\n  this.outside = function (groundObject, pos) {\n    // check if the piece is outside the ground are\n    return this.placeOnGround(groundObject, pos, 'outside')\n  }\n  this.placeOnGround = function (groundObject, pos, method) {\n    // method could be one of \"draw\", \"collide\", \"outside\"\n    // draw will update the blocks on the ground based on the piece position\n    // collide will check if the piece collides with the ground\n    // outside will check if the piece if outside the ground area\n    var ground = groundObject.ground\n    // the shape of the piece\n    var pattern = this.shapes[this.shapeIndex]\n    var block = null\n    function shouldDrawALine (p, y, x) {\n      // this returns if a line should be painted on the side of the rectangle pixel\n      if (p[y] && p[y][x]) {\n        return 1 - p[y][x]\n      }\n      return 1\n    }\n    for (var y = 0; y < pattern.length; y++) {\n      for (var x = 0; x < pattern[y].length; x++) {\n        if (pattern[y][x] === 1) {\n          try {\n            let xground = x + pos[0] - this.offset[0]\n            let yground = y + pos[1] - this.offset[1]\n            block = ground[xground][yground]\n          } catch (e) {\n            block = null\n          }\n\n          // test collide\n          if (method === 'collide' && block && !block.empty) {\n            return true\n          } else if (method === 'draw' && block) {\n            block.setColor(this.color)\n            block.empty = false\n            block.lines = [\n              shouldDrawALine(pattern, y - 1, x),\n              shouldDrawALine(pattern, y, x + 1),\n              shouldDrawALine(pattern, y + 1, x),\n              shouldDrawALine(pattern, y, x - 1)\n            ]\n          } else if (method === 'outside' && block == null) {\n            return true\n          }\n        }\n      }\n    }\n    if (method === 'collide' || method === 'outside') {\n      return false\n    }\n  }\n\n  this.initialize()\n}\n\nexport default Piece\n","import {changeColorLuminance} from './helpers'\n\nconst TOP_LINE = 1\nconst RIGHT_LINE = 2\nconst BOTTOM_LINE = 4\nconst LEFT_LINE = 8\nconst ALL_LINES = TOP_LINE + RIGHT_LINE + BOTTOM_LINE + LEFT_LINE\n\nfunction toLines (points) {\n  var lines = []\n  for (let index = 0; index < points.length - 1; index++) {\n    lines.push(\n      [points[index], points[index + 1]]\n    )\n  }\n  return lines\n}\n\nfunction drawBlock (drawable, data) {\n  let roughCanvas = drawable.roughCanvas\n  // draw the block\n  var margin = data.size * 0.1\n  var left = data.x\n  var right = data.x + data.size\n  var top = data.y\n  var bottom = data.y + data.size\n  /*\n  Block diagram from drawing margins\n\n  ##b##c##\n  ##-##-##\n  e-f##g-h\n  ########\n  ########\n  i-j##k-l\n  ##-##-##\n  ##n##o##\n\n  */\n  var b = [left + margin, top]\n  var c = [right - margin, top]\n\n  var e = [left, top + margin]\n  var f = [left + margin, top + margin]\n  var g = [right - margin, top + margin]\n  var h = [right, top + margin]\n\n  var i = [left, bottom - margin]\n  var j = [left + margin, bottom - margin]\n  var k = [right - margin, bottom - margin]\n  var l = [right, bottom - margin]\n\n  var n = [left + margin, bottom]\n  var o = [right - margin, bottom]\n\n  var topLeftPoints = [e, f, b]\n  var topRightPoints = [c, g, h]\n  var bottomRightPoints = [l, k, o]\n  var bottomLeftPoints = [n, j, i]\n\n  var topPoints = [e, h]\n  var rightPoints = [c, o]\n  var bottomPoints = [l, i]\n  var leftPoints = [n, b]\n\n  var lines = []\n  var points = []\n  var hachureAngle = 45\n\n  switch (data.lines) {\n    case ALL_LINES:\n      points = [f, g, k, j]\n      lines = [\n        [f, g], [g, k], [k, j], [j, f]\n      ]\n      hachureAngle = 0\n      break\n    case TOP_LINE + BOTTOM_LINE:\n      points = [e, h, l, i]\n      lines = [[e, h], [l, i]]\n      hachureAngle = 90\n      break\n    case LEFT_LINE + RIGHT_LINE:\n      points = [b, c, o, n]\n      lines = [[b, n], [c, o]]\n      hachureAngle = 0\n      break\n    case ALL_LINES - TOP_LINE:\n      points = [b, c, k, j]\n      lines = [\n        [c, k], [k, j], [j, b]\n      ]\n      hachureAngle = 0\n      break\n    case ALL_LINES - RIGHT_LINE:\n      points = [f, h, l, j]\n      lines = [\n        [f, h], [l, j], [j, f]\n      ]\n      hachureAngle = 90\n      break\n    case ALL_LINES - BOTTOM_LINE:\n      points = [f, g, o, n]\n      lines = [\n        [f, g], [g, o], [n, f]\n      ]\n      hachureAngle = 0\n      break\n    case ALL_LINES - LEFT_LINE:\n      points = [e, g, k, i]\n      lines = [\n        [e, g], [g, k], [k, i]\n      ]\n      hachureAngle = 90\n      break\n    case LEFT_LINE + BOTTOM_LINE:\n      hachureAngle = 45\n      points = [j, b, c, g, h, l]\n      lines = [[c, g], [g, h], [l, j], [j, b]]\n      break\n    case LEFT_LINE + TOP_LINE:\n      hachureAngle = -45\n      points = [f, h, l, k, o, n]\n      lines = [[f, h], [l, k], [k, o], [n, f]]\n      break\n    case RIGHT_LINE + BOTTOM_LINE:\n      hachureAngle = -45\n      points = [e, f, b, c, k, i]\n      lines = [[e, f], [f, b], [c, k], [k, i]]\n      break\n    case RIGHT_LINE + TOP_LINE:\n      hachureAngle = 45\n      points = [e, g, o, n, j, i]\n      lines = [[e, g], [g, o], [n, j], [j, i]]\n      break\n    case TOP_LINE:\n      points = topPoints.concat(bottomRightPoints).concat(bottomLeftPoints)\n      lines = [topPoints].concat(toLines(bottomRightPoints)).concat(toLines(bottomLeftPoints))\n      hachureAngle = 90\n      break\n    case RIGHT_LINE:\n      points = rightPoints.concat(bottomLeftPoints).concat(topLeftPoints)\n      lines = [rightPoints].concat(toLines(bottomLeftPoints)).concat(toLines(topLeftPoints))\n      hachureAngle = 0\n      break\n    case BOTTOM_LINE:\n      points = bottomPoints.concat(topLeftPoints).concat(topRightPoints)\n      lines = [bottomPoints].concat(toLines(topLeftPoints)).concat(toLines(topRightPoints))\n      hachureAngle = 90\n      break\n    case LEFT_LINE:\n      points = leftPoints.concat(topRightPoints).concat(bottomRightPoints)\n      lines = [leftPoints].concat(toLines(topRightPoints)).concat(toLines(bottomRightPoints))\n      hachureAngle = 0\n      break\n    case 0:\n      points = topLeftPoints.concat(topRightPoints).concat(bottomRightPoints).concat(bottomLeftPoints)\n      lines = [topLeftPoints].concat(toLines(topRightPoints)).concat(toLines(bottomRightPoints)).concat(toLines(bottomLeftPoints))\n      hachureAngle = 0\n      break\n  }\n\n  roughCanvas.polygon(points, {\n    hachureAngle: hachureAngle,\n    hachureGap: 4,\n    roughness: 1.8,\n    stroke: 'rgba(0,0,0,0.1)',\n    fill: data.color,\n    fillStyle: 'zigzag' // solid fill\n  })\n\n  var lineOptions = {\n    strokeWidth: data.size * 0.06,\n    stroke: data.strokeColor\n  }\n\n  lines.forEach(line => {\n    roughCanvas.line(line[0][0], line[0][1], line[1][0], line[1][1], lineOptions)\n  })\n}\n\nfunction Block (x, y, options) {\n  // this represents a single pixel from the tetris\n  this.draw = function (drawable, drawEmpty) {\n    if (this.empty) { return }\n    drawBlock(drawable, {\n      x: this.x,\n      y: this.y,\n      size: this.size,\n      color: this.color,\n      strokeColor: this.strokeColor,\n      lines: this.getLinesAsNumber()\n    })\n  }\n  this.drawOriginal = function (drawable, drawEmpty) {\n    let roughCanvas = drawable.roughCanvas\n    // drawEmpty lets you know if the empty cell show be painted or not\n    if (this.empty && !drawEmpty) { return }\n    // draw the block\n    roughCanvas.rectangle(this.x, this.y, this.size, this.size, {\n      hachureGap: 4,\n      roughness: 1.8,\n      stroke: 'rgba(0,0,0,0.1)',\n      fill: this.empty ? this.emptyColor : this.color,\n      fillStyle: 'zigzag' // solid fill\n    })\n    if (this.empty) { return }\n    // never draw lines on empty blocks\n    this.drawBlockLines(drawable)\n  }\n  this.drawBlockLines = function (drawable) {\n    var roughCanvas = drawable.roughCanvas\n    var offset = this.size * 0.12 // this will draw lines outside the block\n    var left = this.x\n    var top = this.y\n    var bottom = this.y + this.size\n    var right = this.x + this.size\n    // strokeWidth\n    var lineOptions = {\n      strokeWidth: this.size * 0.06,\n      stroke: this.strokeColor\n    }\n    // top line\n    if (this.lines[0] === 1) {\n      roughCanvas.line(left - offset, top, right + offset, top, lineOptions)\n    }\n    // right line\n    if (this.lines[1] === 1) {\n      roughCanvas.line(right, top - offset, right, bottom + offset, lineOptions)\n    }\n    // bottom line\n    if (this.lines[2] === 1) {\n      roughCanvas.line(left - offset, bottom, right + offset, bottom, lineOptions)\n    }\n    // left line\n    if (this.lines[3] === 1) {\n      roughCanvas.line(left, top - offset, left, bottom + offset, lineOptions)\n    }\n  }\n  this.setColor = function (color) {\n    this.color = color\n    // add transparency\n    this.strokeColor = changeColorLuminance(this.color, -0.7) + '80'\n  }\n\n  this.copyFrom = function (block) {\n    this.setColor(block.color)\n    this.empty = block.empty\n    this.lines[0] = block.lines[0]\n    this.lines[1] = block.lines[1]\n    this.lines[2] = block.lines[2]\n    this.lines[3] = block.lines[3]\n  }\n\n  this.setPos = function (x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  this.setSize = function (size) {\n    this.size = size\n  }\n  this.getLinesAsNumber = function () {\n    return this.lines[0] * 1 +\n           this.lines[1] * 2 +\n           this.lines[2] * 4 +\n           this.lines[3] * 8\n  }\n\n  // initialization\n  this.options = {\n    size: 15,\n    emptyColor: '#1a1a1a',\n    color: '#1a1a1a'\n  }\n  Object.assign(this.options, options)\n\n  this.empty = true\n  this.emptyColor = this.options.emptyColor\n  this.setColor(this.options.color)\n  this.setSize(this.options.size)\n  this.setPos(x, y)\n  this.x = x\n  this.y = y\n  // top right bottom left\n  this.lines = [0, 0, 0, 0]\n}\n\nexport default Block\n","import Block from './block'\nimport {range} from './helpers'\n\nfunction Ground (groundWidth, groundHeight, blockSize) {\n  this.addRandomBottom = function (lines) {\n    // move the lines up so the random blocks don't endup\n    // overriden user made blocks\n    var w\n    var h\n    var b\n    for (w = 0; w < this.groundWidth; w++) {\n      for (h = 0; h < this.groundHeight; h++) {\n        if (this.ground[w][h + lines] != null) {\n          this.ground[w][h].copyFrom(this.ground[w][h + lines])\n        }\n      }\n    }\n    // add random bottom\n    for (w = 0; w < this.groundWidth; w++) {\n      for (h = this.groundHeight - lines; h < this.groundHeight; h++) {\n        b = this.ground[w][h]\n        b.setColor('#af5089')\n        if (Math.random() < 0.7) {\n          b.empty = false\n          b.lines = [1, 1, 1, 1]\n        } else {\n          b.empty = true\n        }\n      }\n    }\n  }\n\n  this.hide = function (options) {\n    // mark all the blocks as empty\n    this.mapGroundBlocks(function (w, h, block) {\n      block.empty = true\n    })\n  }\n\n  this.setBlockSize = function (size) {\n    this.blockSize = size\n    for (var w = 0; w < this.groundWidth; w++) {\n      for (var h = 0; h < this.groundHeight; h++) {\n        // change the size of the block\n        this.ground[w][h].setSize(this.blockSize)\n        // reposition the block inside the canvas\n        this.ground[w][h].setPos(\n          w * this.blockSize,\n          h * this.blockSize\n        )\n      }\n    }\n  }\n\n  this.meld = function (size) {\n    // remove lines inside continous blocks\n    function shouldDrawALine (ground, block, y, x) {\n      if (ground[x] && ground[x][y]) {\n        if (ground[x][y].empty) {\n          return 1 // draw a line\n        } else {\n          // if the block is not empty\n          // then check if is the same color\n          // and draw a line if not the same\n          return ground[x][y].color === block.color ? 0 : 1\n        }\n      } else {\n        // outside the ground area, always draw a line\n        return 1\n      }\n    }\n\n    for (var w = 0; w < this.groundWidth; w++) {\n      for (var h = 0; h < this.groundHeight; h++) {\n        var block = this.ground[w][h]\n        this.ground[w][h].lines = [\n          shouldDrawALine(this.ground, block, h - 1, w), // top\n          shouldDrawALine(this.ground, block, h, w + 1), // right\n          shouldDrawALine(this.ground, block, h + 1, w), // bottom\n          shouldDrawALine(this.ground, block, h, w - 1) // left\n        ]\n      }\n    }\n  }\n\n  this.mapGroundBlocks = function (callback) {\n    for (var w = 0; w < this.groundWidth; w++) {\n      for (var h = 0; h < this.groundHeight; h++) {\n        callback(w, h, this.ground[w][h], this.ground)\n      }\n    }\n  }\n\n  this.ended = function () {\n    for (var w = 0; w < this.groundWidth; w++) {\n      if (!this.ground[w][1].empty || !this.ground[w][1].empty) {\n        return true\n      }\n    }\n    return false\n  }\n\n  this.getCompletedLines = function () {\n    // returns the line number of lines with non empty block from side to side\n    var completedLines = []\n    var complete = 0\n    for (var h = 0; h < this.groundHeight; h++) {\n      complete = 0\n      for (var w = 0; w < this.groundWidth; w++) {\n        if (!this.ground[w][h].empty) {\n          complete += 1\n        }\n      }\n      if (complete === this.groundWidth) {\n        completedLines.push(h)\n      }\n    }\n    return completedLines\n  }\n\n  this.removeLine = function (line) {\n    for (var w = 0; w < this.groundWidth; w++) {\n      for (var h = 0; h < this.groundHeight; h++) {\n        if (h === line) {\n          // remove line\n          for (var ht = h; ht > 0; ht--) {\n            this.ground[w][ht].copyFrom(this.ground[w][ht - 1])\n          }\n          this.ground[w][h].lines[2] = 1\n          if (this.ground[w][h + 1]) {\n            this.ground[w][h + 1].lines[0] = 1\n          }\n        }\n      }\n    }\n  }\n\n  this.removeLines = function (lines) {\n    for (var i = 0; i < lines.length; i++) {\n      this.removeLine(lines[i])\n    }\n  }\n  this.drawGrid = function (drawable) {\n    let roughCanvas = drawable.roughCanvas\n    let options = {\n      stroke: 'rgb(0, 0, 0, 0.5)',\n      strokeWidth: this.blockSize / 10,\n      bowing: 0.6\n    }\n    let gridOptions = {\n      roughness: 0.6,\n      stroke: 'rgb(203, 255, 241, 0.7)',\n      strokeWidth: this.blockSize / 40\n    }\n    let top = 0\n    let bottom = this.groundHeight * this.blockSize\n    let left = 0\n    let right = this.groundWidth * this.blockSize\n    range(left, right, this.blockSize).map((position) => {\n      // vertical lines\n      roughCanvas.line(\n        position, bottom,\n        position, top,\n        gridOptions\n      )\n    })\n    range(top, bottom, this.blockSize).map((position) => {\n      // horizontal lines\n      roughCanvas.line(\n        left, position,\n        right, position,\n        gridOptions\n      )\n    })\n    // top left > top right\n    roughCanvas.line(\n      left, top,\n      right, top,\n      options\n    )\n    // top right > bottom right\n    roughCanvas.line(\n      right, top,\n      right, bottom,\n      options\n    )\n    // bottom right > bottom left\n    roughCanvas.line(\n      right, bottom,\n      left, bottom,\n      options\n    )\n    // bottom left > top left\n    roughCanvas.line(\n      left, bottom,\n      left, top,\n      options\n    )\n  }\n\n  this.groundWidth = groundWidth\n  this.groundHeight = groundHeight\n  this.blockSize = blockSize\n  this.blocks = []\n  this.ground = []\n\n  // Init\n  var b\n  var col = []\n  for (var w = 0; w < this.groundWidth; w++) {\n    col = []\n    for (var h = 0; h < this.groundHeight; h++) {\n      b = new Block(\n        w * this.blockSize,\n        h * this.blockSize,\n        {\n          size: blockSize\n        }\n      )\n      col.push(b)\n      this.blocks.push(b)\n    }\n    this.ground.push(col)\n  }\n}\n\nexport default Ground\n","import Piece from './piece'\nimport Ground from './ground'\n\nfunction Tetris (options) {\n  // initialize\n  this.initialize = function () {\n    this.options = {\n      width: 100,\n      height: 100,\n      groundWidth: 10,\n      groundHeight: 22,\n      drawableBackground: null,\n      drawablePieces: null\n    }\n    Object.assign(this.options, options)\n    this.blockSize = 20\n    this.options.width = this.options.groundWidth * this.blockSize\n    this.newPiecePosition = [\n      parseInt(this.options.groundWidth / 2) - 1, 0\n    ]\n    this.ground = new Ground(\n      this.options.groundWidth,\n      this.options.groundHeight,\n      this.blockSize\n    )\n    this.currentPieceGround = new Ground(\n      this.options.groundWidth,\n      this.options.groundHeight,\n      this.blockSize\n    )\n    this.reset()\n  }\n\n  this.reset = function () {\n    this.ground.hide()\n    this.currentPieceGround.hide()\n    this.ended = false\n    this.count = {\n      pieces: 0,\n      lines: 0,\n      linesCount: {\n        1: 0,\n        2: 0,\n        3: 0,\n        4: 0\n      },\n      speed: 0\n    }\n    this.piecePosition = [\n      this.newPiecePosition[0],\n      this.newPiecePosition[1]\n    ]\n    this.piece = new Piece()\n    this.nextPiece = new Piece()\n    this.groundDirty = true\n    this.currentPieceGroundDirty = true\n  }\n\n  this.serialize = function (previousUpdate) {\n    var serializedGround = []\n    for (let w = 0; w < this.ground.groundWidth; w++) {\n      for (let h = 0; h < this.ground.groundHeight; h++) {\n        var cpb = this.currentPieceGround.ground[w][h]\n        var b = this.ground.ground[w][h]\n        var blockToPush = null\n        if (b.empty && !cpb.empty) {\n          blockToPush = cpb\n        } else if (!b.empty && cpb.empty) {\n          blockToPush = b\n        }\n        if (blockToPush) {\n          serializedGround.push([\n            (w << 6) + h,\n            parseInt(blockToPush.color.replace('#', '0x')),\n            blockToPush.lines[0] * 1 +\n            blockToPush.lines[1] * 2 +\n            blockToPush.lines[2] * 4 +\n            blockToPush.lines[3] * 8\n          ])\n        } else {\n          serializedGround.push([(w << 6) + h])\n        }\n      }\n    }\n    return serializedGround\n  }\n\n  this.loadSerializedData = function (data) {\n    data.map((e) => {\n      var h = e[0] & 63\n      var w = e[0] >> 6 & 63\n      if (!e[1]) {\n        this.ground.ground[w][h].empty = true\n      } else {\n        this.ground.ground[w][h].empty = false\n        this.ground.ground[w][h].setColor('#' + ('000000' + (e[1]).toString(16)).slice(-6))\n        this.ground.ground[w][h].lines = [\n          e[2] & 1,\n          e[2] >> 1 & 1,\n          e[2] >> 2 & 1,\n          e[2] >> 3 & 1\n        ]\n      }\n    })\n    this.currentPieceGroundDirty = true\n    this.groundDirty = true\n    this.draw()\n  }\n\n  this.drawPieceGround = function () {\n    this.options.drawablePieces.clear()\n    this.currentPieceGround.mapGroundBlocks(function (x, y, block) {\n      block.draw(this.options.drawablePieces)\n    }.bind(this))\n    this.currentPieceGroundDirty = false\n  }\n\n  this.drawGround = function () {\n    this.options.drawableBackground.clear()\n    this.ground.drawGrid(this.options.drawableBackground)\n    this.ground.mapGroundBlocks(function (x, y, block) {\n      block.draw(this.options.drawableBackground)\n    }.bind(this))\n    this.groundDirty = false\n  }\n\n  this.draw = function () {\n    if (this.currentPieceGroundDirty) { this.drawPieceGround() }\n    if (this.groundDirty) { this.drawGround() }\n  }\n\n  this.rotatePiece = function (action, reverseAction) {\n    this.piece[action]()\n    var tmpPos = [this.piecePosition[0], this.piecePosition[1]]\n    if (this.piece.collide(this.ground, this.piecePosition) || this.piece.outside(this.ground, this.piecePosition)) {\n      // test moving left\n      tmpPos = [ this.piecePosition[0] - 1, this.piecePosition[1] ]\n      if (this.piece.collide(this.ground, tmpPos) || this.piece.outside(this.ground, tmpPos)) {\n        // test moving right\n        tmpPos = [ this.piecePosition[0] + 1, this.piecePosition[1] ]\n        if (this.piece.collide(this.ground, tmpPos) || this.piece.outside(this.ground, tmpPos)) {\n        // un able to move , undo\n          this.piece[reverseAction]()\n          return\n        }\n      }\n    }\n    this.piecePosition = tmpPos\n    this.currentPieceGroundDirty = true\n    this.currentPieceGround.hide()\n    this.piece.draw(this.currentPieceGround, this.piecePosition)\n  }\n\n  this.rotatePieceClockwise = function () {\n    this.rotatePiece('rotateClockwise', 'rotateCounterClockwise')\n  }\n\n  this.rotatePieceCounterClockwise = function () {\n    this.rotatePiece('rotateCounterClockwise', 'rotateClockwise')\n  }\n\n  this.pieceMove = function (offsetX) {\n    var newPos = [\n      this.piecePosition[0] + offsetX,\n      this.piecePosition[1]\n    ]\n    if (this.piece.collide(this.ground, newPos) || this.piece.outside(this.ground, newPos)) {\n      // collision nothing to do\n    } else {\n      this.piecePosition = newPos\n      this.currentPieceGroundDirty = true\n      this.currentPieceGround.hide()\n      this.piece.draw(this.currentPieceGround, this.piecePosition)\n    }\n  }\n\n  this.pieceMoveLeft = function () {\n    this.pieceMove(-1)\n  }\n\n  this.pieceMoveRight = function () {\n    this.pieceMove(1)\n  }\n\n  this.pieceMoveDown = function (options) {\n    if (this.ended) { return }\n    var args = {}\n    Object.assign(args, {\n      auto: false\n    }, options)\n    this.piecePosition[1] += 1\n    if (this.piece.collide(this.ground, this.piecePosition) || this.piece.outside(this.ground, this.piecePosition)) {\n      // after moving the piece down it collided so move it up and add a new one at the top\n      this.piecePosition[1] -= 1\n      this.piece.draw(this.ground, this.piecePosition)\n      this.piecePosition = [this.newPiecePosition[0], this.newPiecePosition[1]]\n      this.piece = this.nextPiece\n      this.nextPiece = new Piece()\n      var l = this.ground.getCompletedLines()\n      if (l.length > 0) {\n        this.count.linesCount[l.length] += 1\n        this.linesRemovedCallback(this, l)\n      }\n      this.count.lines += l.length\n      this.count.pieces += 1\n      this.newPieceCallback(this, this.piece, this.nextPiece, l)\n      this.ground.removeLines(l)\n      if (this.ground.ended()) {\n        this.ended = true\n        // when the game ends grey out all the pieces\n        this.ground.mapGroundBlocks(function (x, y, b) {\n          b.setColor('#777777')\n        })\n        this.gameEndedCallback(this)\n      }\n      this.ground.meld()\n      this.groundDirty = true\n    }\n    if (!args.auto) {\n      this.count.speed += 1\n    }\n    this.currentPieceGround.hide()\n    this.piece.draw(this.currentPieceGround, this.piecePosition)\n    this.currentPieceGroundDirty = true\n  }\n\n  // Methods\n  this.resize = function (blockSize) {\n    this.blockSize = blockSize\n    this.ground.setBlockSize(this.blockSize)\n    this.currentPieceGround.setBlockSize(this.blockSize)\n    this.groundDirty = true\n    this.currentPieceGroundDirty = true\n  }\n\n  this.getPoints = function () {\n    return (\n      this.count.linesCount[1] * 10 +\n      this.count.linesCount[2] * 20 +\n      this.count.linesCount[3] * 45 +\n      this.count.linesCount[4] * 70 +\n      this.count.pieces * 3 +\n      this.count.speed * 8\n    )\n  }\n\n  // punishments\n  this.makeNextPieceHardOne = function () {\n    this.nextPiece = new Piece(null, {\n      hard: true\n    })\n  }\n\n  this.addRandomBottom = function (numberOfLines) {\n    if (numberOfLines === undefined) {\n      numberOfLines = Math.ceil(Math.random() * 4)\n    }\n    this.ground.addRandomBottom(numberOfLines)\n    this.groundDirty = true\n  }\n\n  // callbacks\n  this.linesRemovedCallback = function (tetris, lines) {\n  }\n\n  this.gameEndedCallback = function (tetris) {\n  }\n\n  this.newPieceCallback = function (tetris, currentPiece, nextPiece, lines) {\n  }\n\n  this.initialize()\n}\n\nexport default Tetris\n","function isType(token, type) {\n    return token.type === type;\n}\nconst PARAMS = {\n    A: 7,\n    a: 7,\n    C: 6,\n    c: 6,\n    H: 1,\n    h: 1,\n    L: 2,\n    l: 2,\n    M: 2,\n    m: 2,\n    Q: 4,\n    q: 4,\n    S: 4,\n    s: 4,\n    T: 4,\n    t: 2,\n    V: 1,\n    v: 1,\n    Z: 0,\n    z: 0\n};\nclass ParsedPath {\n    constructor(d) {\n        this.COMMAND = 0;\n        this.NUMBER = 1;\n        this.EOD = 2;\n        this.segments = [];\n        this.parseData(d);\n        this.processPoints();\n    }\n    tokenize(d) {\n        const tokens = new Array();\n        while (d !== '') {\n            if (d.match(/^([ \\t\\r\\n,]+)/)) {\n                d = d.substr(RegExp.$1.length);\n            }\n            else if (d.match(/^([aAcChHlLmMqQsStTvVzZ])/)) {\n                tokens[tokens.length] = { type: this.COMMAND, text: RegExp.$1 };\n                d = d.substr(RegExp.$1.length);\n            }\n            else if (d.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) {\n                tokens[tokens.length] = { type: this.NUMBER, text: `${parseFloat(RegExp.$1)}` };\n                d = d.substr(RegExp.$1.length);\n            }\n            else {\n                console.error('Unrecognized segment command: ' + d);\n                return [];\n            }\n        }\n        tokens[tokens.length] = { type: this.EOD, text: '' };\n        return tokens;\n    }\n    parseData(d) {\n        const tokens = this.tokenize(d);\n        let index = 0;\n        let token = tokens[index];\n        let mode = 'BOD';\n        this.segments = new Array();\n        while (!isType(token, this.EOD)) {\n            let param_length;\n            const params = new Array();\n            if (mode === 'BOD') {\n                if (token.text === 'M' || token.text === 'm') {\n                    index++;\n                    param_length = PARAMS[token.text];\n                    mode = token.text;\n                }\n                else {\n                    this.parseData('M0,0' + d);\n                    return;\n                }\n            }\n            else {\n                if (isType(token, this.NUMBER)) {\n                    param_length = PARAMS[mode];\n                }\n                else {\n                    index++;\n                    param_length = PARAMS[token.text];\n                    mode = token.text;\n                }\n            }\n            if ((index + param_length) < tokens.length) {\n                for (let i = index; i < index + param_length; i++) {\n                    const numbeToken = tokens[i];\n                    if (isType(numbeToken, this.NUMBER)) {\n                        params[params.length] = +numbeToken.text;\n                    }\n                    else {\n                        console.error('Parameter type is not a number: ' + mode + ',' + numbeToken.text);\n                        return;\n                    }\n                }\n                if (typeof PARAMS[mode] === 'number') {\n                    const segment = { key: mode, data: params };\n                    this.segments.push(segment);\n                    index += param_length;\n                    token = tokens[index];\n                    if (mode === 'M')\n                        mode = 'L';\n                    if (mode === 'm')\n                        mode = 'l';\n                }\n                else {\n                    console.error('Unsupported segment type: ' + mode);\n                    return;\n                }\n            }\n            else {\n                console.error('Path data ended before all parameters were found');\n            }\n        }\n    }\n    get closed() {\n        if (typeof this._closed === 'undefined') {\n            this._closed = false;\n            for (const s of this.segments) {\n                if (s.key.toLowerCase() === 'z') {\n                    this._closed = true;\n                }\n            }\n        }\n        return this._closed;\n    }\n    processPoints() {\n        let first = null;\n        let currentPoint = [0, 0];\n        for (let i = 0; i < this.segments.length; i++) {\n            const s = this.segments[i];\n            switch (s.key) {\n                case 'M':\n                case 'L':\n                case 'T':\n                    s.point = [s.data[0], s.data[1]];\n                    break;\n                case 'm':\n                case 'l':\n                case 't':\n                    s.point = [s.data[0] + currentPoint[0], s.data[1] + currentPoint[1]];\n                    break;\n                case 'H':\n                    s.point = [s.data[0], currentPoint[1]];\n                    break;\n                case 'h':\n                    s.point = [s.data[0] + currentPoint[0], currentPoint[1]];\n                    break;\n                case 'V':\n                    s.point = [currentPoint[0], s.data[0]];\n                    break;\n                case 'v':\n                    s.point = [currentPoint[0], s.data[0] + currentPoint[1]];\n                    break;\n                case 'z':\n                case 'Z':\n                    if (first) {\n                        s.point = [first[0], first[1]];\n                    }\n                    break;\n                case 'C':\n                    s.point = [s.data[4], s.data[5]];\n                    break;\n                case 'c':\n                    s.point = [s.data[4] + currentPoint[0], s.data[5] + currentPoint[1]];\n                    break;\n                case 'S':\n                    s.point = [s.data[2], s.data[3]];\n                    break;\n                case 's':\n                    s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n                    break;\n                case 'Q':\n                    s.point = [s.data[2], s.data[3]];\n                    break;\n                case 'q':\n                    s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n                    break;\n                case 'A':\n                    s.point = [s.data[5], s.data[6]];\n                    break;\n                case 'a':\n                    s.point = [s.data[5] + currentPoint[0], s.data[6] + currentPoint[1]];\n                    break;\n            }\n            if (s.key === 'm' || s.key === 'M') {\n                first = null;\n            }\n            if (s.point) {\n                currentPoint = s.point;\n                if (!first) {\n                    first = s.point;\n                }\n            }\n            if (s.key === 'z' || s.key === 'Z') {\n                first = null;\n            }\n        }\n    }\n}\nexport class RoughPath {\n    constructor(d) {\n        this._position = [0, 0];\n        this._first = null;\n        this.bezierReflectionPoint = null;\n        this.quadReflectionPoint = null;\n        this.parsed = new ParsedPath(d);\n    }\n    get segments() {\n        return this.parsed.segments;\n    }\n    get closed() {\n        return this.parsed.closed;\n    }\n    get linearPoints() {\n        if (!this._linearPoints) {\n            const lp = [];\n            let points = [];\n            for (const s of this.parsed.segments) {\n                const key = s.key.toLowerCase();\n                if (key === 'm' || key === 'z') {\n                    if (points.length) {\n                        lp.push(points);\n                        points = [];\n                    }\n                    if (key === 'z') {\n                        continue;\n                    }\n                }\n                if (s.point) {\n                    points.push(s.point);\n                }\n            }\n            if (points.length) {\n                lp.push(points);\n                points = [];\n            }\n            this._linearPoints = lp;\n        }\n        return this._linearPoints;\n    }\n    get first() {\n        return this._first;\n    }\n    set first(v) {\n        this._first = v;\n    }\n    setPosition(x, y) {\n        this._position = [x, y];\n        if (!this._first) {\n            this._first = [x, y];\n        }\n    }\n    get position() {\n        return this._position;\n    }\n    get x() {\n        return this._position[0];\n    }\n    get y() {\n        return this._position[1];\n    }\n}\n// Algorithm as described in https://www.w3.org/TR/SVG/implnote.html\n// Code adapted from nsSVGPathDataParser.cpp in Mozilla \n// https://hg.mozilla.org/mozilla-central/file/17156fbebbc8/content/svg/content/src/nsSVGPathDataParser.cpp#l887\nexport class RoughArcConverter {\n    constructor(from, to, radii, angle, largeArcFlag, sweepFlag) {\n        this._segIndex = 0;\n        this._numSegs = 0;\n        this._rx = 0;\n        this._ry = 0;\n        this._sinPhi = 0;\n        this._cosPhi = 0;\n        this._C = [0, 0];\n        this._theta = 0;\n        this._delta = 0;\n        this._T = 0;\n        this._from = from;\n        if (from[0] === to[0] && from[1] === to[1]) {\n            return;\n        }\n        const radPerDeg = Math.PI / 180;\n        this._rx = Math.abs(radii[0]);\n        this._ry = Math.abs(radii[1]);\n        this._sinPhi = Math.sin(angle * radPerDeg);\n        this._cosPhi = Math.cos(angle * radPerDeg);\n        const x1dash = this._cosPhi * (from[0] - to[0]) / 2.0 + this._sinPhi * (from[1] - to[1]) / 2.0;\n        const y1dash = -this._sinPhi * (from[0] - to[0]) / 2.0 + this._cosPhi * (from[1] - to[1]) / 2.0;\n        let root = 0;\n        const numerator = this._rx * this._rx * this._ry * this._ry - this._rx * this._rx * y1dash * y1dash - this._ry * this._ry * x1dash * x1dash;\n        if (numerator < 0) {\n            const s = Math.sqrt(1 - (numerator / (this._rx * this._rx * this._ry * this._ry)));\n            this._rx = this._rx * s;\n            this._ry = this._ry * s;\n            root = 0;\n        }\n        else {\n            root = (largeArcFlag === sweepFlag ? -1.0 : 1.0) *\n                Math.sqrt(numerator / (this._rx * this._rx * y1dash * y1dash + this._ry * this._ry * x1dash * x1dash));\n        }\n        const cxdash = root * this._rx * y1dash / this._ry;\n        const cydash = -root * this._ry * x1dash / this._rx;\n        this._C = [0, 0];\n        this._C[0] = this._cosPhi * cxdash - this._sinPhi * cydash + (from[0] + to[0]) / 2.0;\n        this._C[1] = this._sinPhi * cxdash + this._cosPhi * cydash + (from[1] + to[1]) / 2.0;\n        this._theta = this.calculateVectorAngle(1.0, 0.0, (x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry);\n        let dtheta = this.calculateVectorAngle((x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry, (-x1dash - cxdash) / this._rx, (-y1dash - cydash) / this._ry);\n        if ((!sweepFlag) && (dtheta > 0)) {\n            dtheta -= 2 * Math.PI;\n        }\n        else if (sweepFlag && (dtheta < 0)) {\n            dtheta += 2 * Math.PI;\n        }\n        this._numSegs = Math.ceil(Math.abs(dtheta / (Math.PI / 2)));\n        this._delta = dtheta / this._numSegs;\n        this._T = (8 / 3) * Math.sin(this._delta / 4) * Math.sin(this._delta / 4) / Math.sin(this._delta / 2);\n    }\n    getNextSegment() {\n        if (this._segIndex === this._numSegs) {\n            return null;\n        }\n        const cosTheta1 = Math.cos(this._theta);\n        const sinTheta1 = Math.sin(this._theta);\n        const theta2 = this._theta + this._delta;\n        const cosTheta2 = Math.cos(theta2);\n        const sinTheta2 = Math.sin(theta2);\n        const to = [\n            this._cosPhi * this._rx * cosTheta2 - this._sinPhi * this._ry * sinTheta2 + this._C[0],\n            this._sinPhi * this._rx * cosTheta2 + this._cosPhi * this._ry * sinTheta2 + this._C[1]\n        ];\n        const cp1 = [\n            this._from[0] + this._T * (-this._cosPhi * this._rx * sinTheta1 - this._sinPhi * this._ry * cosTheta1),\n            this._from[1] + this._T * (-this._sinPhi * this._rx * sinTheta1 + this._cosPhi * this._ry * cosTheta1)\n        ];\n        const cp2 = [\n            to[0] + this._T * (this._cosPhi * this._rx * sinTheta2 + this._sinPhi * this._ry * cosTheta2),\n            to[1] + this._T * (this._sinPhi * this._rx * sinTheta2 - this._cosPhi * this._ry * cosTheta2)\n        ];\n        this._theta = theta2;\n        this._from = [to[0], to[1]];\n        this._segIndex++;\n        return {\n            cp1: cp1,\n            cp2: cp2,\n            to: to\n        };\n    }\n    calculateVectorAngle(ux, uy, vx, vy) {\n        const ta = Math.atan2(uy, ux);\n        const tb = Math.atan2(vy, vx);\n        if (tb >= ta)\n            return tb - ta;\n        return 2 * Math.PI - (ta - tb);\n    }\n}\nexport class PathFitter {\n    constructor(sets, closed) {\n        this.sets = sets;\n        this.closed = closed;\n    }\n    fit(simplification) {\n        const outSets = [];\n        for (const set of this.sets) {\n            const length = set.length;\n            let estLength = Math.floor(simplification * length);\n            if (estLength < 5) {\n                if (length <= 5) {\n                    continue;\n                }\n                estLength = 5;\n            }\n            outSets.push(this.reduce(set, estLength));\n        }\n        let d = '';\n        for (const set of outSets) {\n            for (let i = 0; i < set.length; i++) {\n                const point = set[i];\n                if (i === 0) {\n                    d += 'M' + point[0] + ',' + point[1];\n                }\n                else {\n                    d += 'L' + point[0] + ',' + point[1];\n                }\n            }\n            if (this.closed) {\n                d += 'z ';\n            }\n        }\n        return d;\n    }\n    distance(p1, p2) {\n        return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n    }\n    reduce(set, count) {\n        if (set.length <= count) {\n            return set;\n        }\n        const points = set.slice(0);\n        while (points.length > count) {\n            const areas = [];\n            let minArea = -1;\n            let minIndex = -1;\n            for (let i = 1; i < (points.length - 1); i++) {\n                const a = this.distance(points[i - 1], points[i]);\n                const b = this.distance(points[i], points[i + 1]);\n                const c = this.distance(points[i - 1], points[i + 1]);\n                const s = (a + b + c) / 2.0;\n                const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n                areas.push(area);\n                if ((minArea < 0) || (area < minArea)) {\n                    minArea = area;\n                    minIndex = i;\n                }\n            }\n            if (minIndex > 0) {\n                points.splice(minIndex, 1);\n            }\n            else {\n                break;\n            }\n        }\n        return points;\n    }\n}\n","export class Segment {\n    constructor(p1, p2) {\n        this.xi = Number.MAX_VALUE;\n        this.yi = Number.MAX_VALUE;\n        this.px1 = p1[0];\n        this.py1 = p1[1];\n        this.px2 = p2[0];\n        this.py2 = p2[1];\n        this.a = this.py2 - this.py1;\n        this.b = this.px1 - this.px2;\n        this.c = this.px2 * this.py1 - this.px1 * this.py2;\n        this._undefined = ((this.a === 0) && (this.b === 0) && (this.c === 0));\n    }\n    isUndefined() {\n        return this._undefined;\n    }\n    intersects(otherSegment) {\n        if (this.isUndefined() || otherSegment.isUndefined()) {\n            return false;\n        }\n        let grad1 = Number.MAX_VALUE;\n        let grad2 = Number.MAX_VALUE;\n        let int1 = 0, int2 = 0;\n        const a = this.a, b = this.b, c = this.c;\n        if (Math.abs(b) > 0.00001) {\n            grad1 = -a / b;\n            int1 = -c / b;\n        }\n        if (Math.abs(otherSegment.b) > 0.00001) {\n            grad2 = -otherSegment.a / otherSegment.b;\n            int2 = -otherSegment.c / otherSegment.b;\n        }\n        if (grad1 === Number.MAX_VALUE) {\n            if (grad2 === Number.MAX_VALUE) {\n                if ((-c / a) !== (-otherSegment.c / otherSegment.a)) {\n                    return false;\n                }\n                if ((this.py1 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n                    this.xi = this.px1;\n                    this.yi = this.py1;\n                    return true;\n                }\n                if ((this.py2 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py2 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n                    this.xi = this.px2;\n                    this.yi = this.py2;\n                    return true;\n                }\n                return false;\n            }\n            this.xi = this.px1;\n            this.yi = (grad2 * this.xi + int2);\n            if (((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001) || ((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001)) {\n                return false;\n            }\n            if (Math.abs(otherSegment.a) < 0.00001) {\n                if ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001) {\n                    return false;\n                }\n                return true;\n            }\n            return true;\n        }\n        if (grad2 === Number.MAX_VALUE) {\n            this.xi = otherSegment.px1;\n            this.yi = grad1 * this.xi + int1;\n            if (((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001) || ((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001)) {\n                return false;\n            }\n            if (Math.abs(a) < 0.00001) {\n                if ((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) {\n                    return false;\n                }\n                return true;\n            }\n            return true;\n        }\n        if (grad1 === grad2) {\n            if (int1 !== int2) {\n                return false;\n            }\n            if ((this.px1 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n                this.xi = this.px1;\n                this.yi = this.py1;\n                return true;\n            }\n            if ((this.px2 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px2 <= Math.max(otherSegment.px1, otherSegment.px2))) {\n                this.xi = this.px2;\n                this.yi = this.py2;\n                return true;\n            }\n            return false;\n        }\n        this.xi = ((int2 - int1) / (grad1 - grad2));\n        this.yi = (grad1 * this.xi + int1);\n        if (((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) || ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001)) {\n            return false;\n        }\n        return true;\n    }\n}\n","import { Segment } from '../geometry';\nexport class HachureIterator {\n    constructor(top, bottom, left, right, gap, sinAngle, cosAngle, tanAngle) {\n        this.deltaX = 0;\n        this.hGap = 0;\n        this.top = top;\n        this.bottom = bottom;\n        this.left = left;\n        this.right = right;\n        this.gap = gap;\n        this.sinAngle = sinAngle;\n        this.tanAngle = tanAngle;\n        if (Math.abs(sinAngle) < 0.0001) {\n            this.pos = left + gap;\n        }\n        else if (Math.abs(sinAngle) > 0.9999) {\n            this.pos = top + gap;\n        }\n        else {\n            this.deltaX = (bottom - top) * Math.abs(tanAngle);\n            this.pos = left - Math.abs(this.deltaX);\n            this.hGap = Math.abs(gap / cosAngle);\n            this.sLeft = new Segment([left, bottom], [left, top]);\n            this.sRight = new Segment([right, bottom], [right, top]);\n        }\n    }\n    nextLine() {\n        if (Math.abs(this.sinAngle) < 0.0001) {\n            if (this.pos < this.right) {\n                const line = [this.pos, this.top, this.pos, this.bottom];\n                this.pos += this.gap;\n                return line;\n            }\n        }\n        else if (Math.abs(this.sinAngle) > 0.9999) {\n            if (this.pos < this.bottom) {\n                const line = [this.left, this.pos, this.right, this.pos];\n                this.pos += this.gap;\n                return line;\n            }\n        }\n        else {\n            let xLower = this.pos - this.deltaX / 2;\n            let xUpper = this.pos + this.deltaX / 2;\n            let yLower = this.bottom;\n            let yUpper = this.top;\n            if (this.pos < (this.right + this.deltaX)) {\n                while (((xLower < this.left) && (xUpper < this.left)) || ((xLower > this.right) && (xUpper > this.right))) {\n                    this.pos += this.hGap;\n                    xLower = this.pos - this.deltaX / 2;\n                    xUpper = this.pos + this.deltaX / 2;\n                    if (this.pos > (this.right + this.deltaX)) {\n                        return null;\n                    }\n                }\n                const s = new Segment([xLower, yLower], [xUpper, yUpper]);\n                if (this.sLeft && s.intersects(this.sLeft)) {\n                    xLower = s.xi;\n                    yLower = s.yi;\n                }\n                if (this.sRight && s.intersects(this.sRight)) {\n                    xUpper = s.xi;\n                    yUpper = s.yi;\n                }\n                if (this.tanAngle > 0) {\n                    xLower = this.right - (xLower - this.left);\n                    xUpper = this.right - (xUpper - this.left);\n                }\n                const line = [xLower, yLower, xUpper, yUpper];\n                this.pos += this.hGap;\n                return line;\n            }\n        }\n        return null;\n    }\n}\n","import { Segment } from '../geometry';\nimport { HachureIterator } from '../utils/hachure';\nexport function lineLength(line) {\n    const p1 = line[0];\n    const p2 = line[1];\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\nexport function getIntersectingLines(line, points) {\n    const intersections = [];\n    const s1 = new Segment([line[0], line[1]], [line[2], line[3]]);\n    for (let i = 0; i < points.length; i++) {\n        const s2 = new Segment(points[i], points[(i + 1) % points.length]);\n        if (s1.intersects(s2)) {\n            intersections.push([s1.xi, s1.yi]);\n        }\n    }\n    return intersections;\n}\nexport function affine(x, y, cx, cy, sinAnglePrime, cosAnglePrime, R) {\n    const A = -cx * cosAnglePrime - cy * sinAnglePrime + cx;\n    const B = R * (cx * sinAnglePrime - cy * cosAnglePrime) + cy;\n    const C = cosAnglePrime;\n    const D = sinAnglePrime;\n    const E = -R * sinAnglePrime;\n    const F = R * cosAnglePrime;\n    return [\n        A + C * x + D * y,\n        B + E * x + F * y\n    ];\n}\nexport function hachureLinesForPolygon(points, o) {\n    const ret = [];\n    if (points && points.length) {\n        let left = points[0][0];\n        let right = points[0][0];\n        let top = points[0][1];\n        let bottom = points[0][1];\n        for (let i = 1; i < points.length; i++) {\n            left = Math.min(left, points[i][0]);\n            right = Math.max(right, points[i][0]);\n            top = Math.min(top, points[i][1]);\n            bottom = Math.max(bottom, points[i][1]);\n        }\n        const angle = o.hachureAngle;\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        const radPerDeg = Math.PI / 180;\n        const hachureAngle = (angle % 180) * radPerDeg;\n        const cosAngle = Math.cos(hachureAngle);\n        const sinAngle = Math.sin(hachureAngle);\n        const tanAngle = Math.tan(hachureAngle);\n        const it = new HachureIterator(top - 1, bottom + 1, left - 1, right + 1, gap, sinAngle, cosAngle, tanAngle);\n        let rect;\n        while ((rect = it.nextLine()) != null) {\n            const lines = getIntersectingLines(rect, points);\n            for (let i = 0; i < lines.length; i++) {\n                if (i < (lines.length - 1)) {\n                    const p1 = lines[i];\n                    const p2 = lines[i + 1];\n                    ret.push([p1, p2]);\n                }\n            }\n        }\n    }\n    return ret;\n}\nexport function hachureLinesForEllipse(cx, cy, width, height, o, renderer) {\n    const ret = [];\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += renderer.getOffset(-rx * 0.05, rx * 0.05, o);\n    ry += renderer.getOffset(-ry * 0.05, ry * 0.05, o);\n    const angle = o.hachureAngle;\n    let gap = o.hachureGap;\n    if (gap <= 0) {\n        gap = o.strokeWidth * 4;\n    }\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n        fweight = o.strokeWidth / 2;\n    }\n    const radPerDeg = Math.PI / 180;\n    const hachureAngle = (angle % 180) * radPerDeg;\n    const tanAngle = Math.tan(hachureAngle);\n    const aspectRatio = ry / rx;\n    const hyp = Math.sqrt(aspectRatio * tanAngle * aspectRatio * tanAngle + 1);\n    const sinAnglePrime = aspectRatio * tanAngle / hyp;\n    const cosAnglePrime = 1 / hyp;\n    const gapPrime = gap / ((rx * ry / Math.sqrt((ry * cosAnglePrime) * (ry * cosAnglePrime) + (rx * sinAnglePrime) * (rx * sinAnglePrime))) / rx);\n    let halfLen = Math.sqrt((rx * rx) - (cx - rx + gapPrime) * (cx - rx + gapPrime));\n    for (let xPos = cx - rx + gapPrime; xPos < cx + rx; xPos += gapPrime) {\n        halfLen = Math.sqrt((rx * rx) - (cx - xPos) * (cx - xPos));\n        const p1 = affine(xPos, cy - halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n        const p2 = affine(xPos, cy + halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n        ret.push([p1, p2]);\n    }\n    return ret;\n}\n","import { hachureLinesForPolygon, hachureLinesForEllipse } from './filler-utils';\nexport class HachureFiller {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    fillPolygon(points, o) {\n        return this._fillPolygon(points, o);\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        return this._fillEllipse(cx, cy, width, height, o);\n    }\n    _fillPolygon(points, o, connectEnds = false) {\n        const lines = hachureLinesForPolygon(points, o);\n        const ops = this.renderLines(lines, o, connectEnds);\n        return { type: 'fillSketch', ops };\n    }\n    _fillEllipse(cx, cy, width, height, o, connectEnds = false) {\n        const lines = hachureLinesForEllipse(cx, cy, width, height, o, this.renderer);\n        const ops = this.renderLines(lines, o, connectEnds);\n        return { type: 'fillSketch', ops };\n    }\n    renderLines(lines, o, connectEnds) {\n        let ops = [];\n        let prevPoint = null;\n        for (const line of lines) {\n            ops = ops.concat(this.renderer.doubleLine(line[0][0], line[0][1], line[1][0], line[1][1], o));\n            if (connectEnds && prevPoint) {\n                ops = ops.concat(this.renderer.doubleLine(prevPoint[0], prevPoint[1], line[0][0], line[0][1], o));\n            }\n            prevPoint = line[1];\n        }\n        return ops;\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nexport class ZigZagFiller extends HachureFiller {\n    fillPolygon(points, o) {\n        return this._fillPolygon(points, o, true);\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        return this._fillEllipse(cx, cy, width, height, o, true);\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nexport class HatchFiller extends HachureFiller {\n    fillPolygon(points, o) {\n        const set = this._fillPolygon(points, o);\n        const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n        const set2 = this._fillPolygon(points, o2);\n        set.ops = set.ops.concat(set2.ops);\n        return set;\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        const set = this._fillEllipse(cx, cy, width, height, o);\n        const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n        const set2 = this._fillEllipse(cx, cy, width, height, o2);\n        set.ops = set.ops.concat(set2.ops);\n        return set;\n    }\n}\n","import { hachureLinesForPolygon, hachureLinesForEllipse, lineLength } from './filler-utils';\nexport class DotFiller {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    fillPolygon(points, o) {\n        o = Object.assign({}, o, { curveStepCount: 4, hachureAngle: 0 });\n        const lines = hachureLinesForPolygon(points, o);\n        return this.dotsOnLines(lines, o);\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        o = Object.assign({}, o, { curveStepCount: 4, hachureAngle: 0 });\n        const lines = hachureLinesForEllipse(cx, cy, width, height, o, this.renderer);\n        return this.dotsOnLines(lines, o);\n    }\n    dotsOnLines(lines, o) {\n        let ops = [];\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        for (const line of lines) {\n            const length = lineLength(line);\n            const dl = length / gap;\n            const count = Math.ceil(dl) - 1;\n            const alpha = Math.atan((line[1][1] - line[0][1]) / (line[1][0] - line[0][0]));\n            for (let i = 0; i < count; i++) {\n                const l = gap * (i + 1);\n                const dy = l * Math.sin(alpha);\n                const dx = l * Math.cos(alpha);\n                const c = [line[0][0] - dx, line[0][1] + dy];\n                const cx = this.renderer.getOffset(c[0] - gap / 4, c[0] + gap / 4, o);\n                const cy = this.renderer.getOffset(c[1] - gap / 4, c[1] + gap / 4, o);\n                const ellipse = this.renderer.ellipse(cx, cy, fweight, fweight, o);\n                ops = ops.concat(ellipse.ops);\n            }\n        }\n        return { type: 'fillSketch', ops };\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nimport { ZigZagFiller } from './zigzag-filler';\nimport { HatchFiller } from './hatch-filler';\nimport { DotFiller } from './dot-filler';\nconst fillers = {};\nexport function getFiller(renderer, o) {\n    let fillerName = o.fillStyle || 'hachure';\n    if (!fillers[fillerName]) {\n        switch (fillerName) {\n            case 'zigzag':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new ZigZagFiller(renderer);\n                }\n                break;\n            case 'cross-hatch':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new HatchFiller(renderer);\n                }\n                break;\n            case 'dots':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new DotFiller(renderer);\n                }\n                break;\n            case 'hachure':\n            default:\n                fillerName = 'hachure';\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new HachureFiller(renderer);\n                }\n                break;\n        }\n    }\n    return fillers[fillerName];\n}\n","import { RoughPath, RoughArcConverter, PathFitter } from './path.js';\nimport { getFiller } from './fillers/filler';\nexport class RoughRenderer {\n    line(x1, y1, x2, y2, o) {\n        const ops = this.doubleLine(x1, y1, x2, y2, o);\n        return { type: 'path', ops };\n    }\n    linearPath(points, close, o) {\n        const len = (points || []).length;\n        if (len > 2) {\n            let ops = [];\n            for (let i = 0; i < (len - 1); i++) {\n                ops = ops.concat(this.doubleLine(points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], o));\n            }\n            if (close) {\n                ops = ops.concat(this.doubleLine(points[len - 1][0], points[len - 1][1], points[0][0], points[0][1], o));\n            }\n            return { type: 'path', ops };\n        }\n        else if (len === 2) {\n            return this.line(points[0][0], points[0][1], points[1][0], points[1][1], o);\n        }\n        return { type: 'path', ops: [] };\n    }\n    polygon(points, o) {\n        return this.linearPath(points, true, o);\n    }\n    rectangle(x, y, width, height, o) {\n        const points = [\n            [x, y], [x + width, y], [x + width, y + height], [x, y + height]\n        ];\n        return this.polygon(points, o);\n    }\n    curve(points, o) {\n        const o1 = this._curveWithOffset(points, 1 * (1 + o.roughness * 0.2), o);\n        const o2 = this._curveWithOffset(points, 1.5 * (1 + o.roughness * 0.22), o);\n        return { type: 'path', ops: o1.concat(o2) };\n    }\n    ellipse(x, y, width, height, o) {\n        const increment = (Math.PI * 2) / o.curveStepCount;\n        let rx = Math.abs(width / 2);\n        let ry = Math.abs(height / 2);\n        rx += this.getOffset(-rx * 0.05, rx * 0.05, o);\n        ry += this.getOffset(-ry * 0.05, ry * 0.05, o);\n        const o1 = this._ellipse(increment, x, y, rx, ry, 1, increment * this.getOffset(0.1, this.getOffset(0.4, 1, o), o), o);\n        const o2 = this._ellipse(increment, x, y, rx, ry, 1.5, 0, o);\n        return { type: 'path', ops: o1.concat(o2) };\n    }\n    arc(x, y, width, height, start, stop, closed, roughClosure, o) {\n        const cx = x;\n        const cy = y;\n        let rx = Math.abs(width / 2);\n        let ry = Math.abs(height / 2);\n        rx += this.getOffset(-rx * 0.01, rx * 0.01, o);\n        ry += this.getOffset(-ry * 0.01, ry * 0.01, o);\n        let strt = start;\n        let stp = stop;\n        while (strt < 0) {\n            strt += Math.PI * 2;\n            stp += Math.PI * 2;\n        }\n        if ((stp - strt) > (Math.PI * 2)) {\n            strt = 0;\n            stp = Math.PI * 2;\n        }\n        const ellipseInc = (Math.PI * 2) / o.curveStepCount;\n        const arcInc = Math.min(ellipseInc / 2, (stp - strt) / 2);\n        const o1 = this._arc(arcInc, cx, cy, rx, ry, strt, stp, 1, o);\n        const o2 = this._arc(arcInc, cx, cy, rx, ry, strt, stp, 1.5, o);\n        let ops = o1.concat(o2);\n        if (closed) {\n            if (roughClosure) {\n                ops = ops.concat(this.doubleLine(cx, cy, cx + rx * Math.cos(strt), cy + ry * Math.sin(strt), o));\n                ops = ops.concat(this.doubleLine(cx, cy, cx + rx * Math.cos(stp), cy + ry * Math.sin(stp), o));\n            }\n            else {\n                ops.push({ op: 'lineTo', data: [cx, cy] });\n                ops.push({ op: 'lineTo', data: [cx + rx * Math.cos(strt), cy + ry * Math.sin(strt)] });\n            }\n        }\n        return { type: 'path', ops };\n    }\n    svgPath(path, o) {\n        path = (path || '').replace(/\\n/g, ' ').replace(/(-\\s)/g, '-').replace('/(\\s\\s)/g', ' ');\n        let p = new RoughPath(path);\n        if (o.simplification) {\n            const fitter = new PathFitter(p.linearPoints, p.closed);\n            const d = fitter.fit(o.simplification);\n            p = new RoughPath(d);\n        }\n        let ops = [];\n        const segments = p.segments || [];\n        for (let i = 0; i < segments.length; i++) {\n            const s = segments[i];\n            const prev = i > 0 ? segments[i - 1] : null;\n            const opList = this._processSegment(p, s, prev, o);\n            if (opList && opList.length) {\n                ops = ops.concat(opList);\n            }\n        }\n        return { type: 'path', ops };\n    }\n    solidFillPolygon(points, o) {\n        const ops = [];\n        if (points.length) {\n            const offset = o.maxRandomnessOffset || 0;\n            const len = points.length;\n            if (len > 2) {\n                ops.push({ op: 'move', data: [points[0][0] + this.getOffset(-offset, offset, o), points[0][1] + this.getOffset(-offset, offset, o)] });\n                for (let i = 1; i < len; i++) {\n                    ops.push({ op: 'lineTo', data: [points[i][0] + this.getOffset(-offset, offset, o), points[i][1] + this.getOffset(-offset, offset, o)] });\n                }\n            }\n        }\n        return { type: 'fillPath', ops };\n    }\n    patternFillPolygon(points, o) {\n        const filler = getFiller(this, o);\n        return filler.fillPolygon(points, o);\n    }\n    patternFillEllipse(cx, cy, width, height, o) {\n        const filler = getFiller(this, o);\n        return filler.fillEllipse(cx, cy, width, height, o);\n    }\n    patternFillArc(x, y, width, height, start, stop, o) {\n        const cx = x;\n        const cy = y;\n        let rx = Math.abs(width / 2);\n        let ry = Math.abs(height / 2);\n        rx += this.getOffset(-rx * 0.01, rx * 0.01, o);\n        ry += this.getOffset(-ry * 0.01, ry * 0.01, o);\n        let strt = start;\n        let stp = stop;\n        while (strt < 0) {\n            strt += Math.PI * 2;\n            stp += Math.PI * 2;\n        }\n        if ((stp - strt) > (Math.PI * 2)) {\n            strt = 0;\n            stp = Math.PI * 2;\n        }\n        const increment = (stp - strt) / o.curveStepCount;\n        const points = [];\n        for (let angle = strt; angle <= stp; angle = angle + increment) {\n            points.push([cx + rx * Math.cos(angle), cy + ry * Math.sin(angle)]);\n        }\n        points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n        points.push([cx, cy]);\n        return this.patternFillPolygon(points, o);\n    }\n    /// \n    getOffset(min, max, ops) {\n        return ops.roughness * ((Math.random() * (max - min)) + min);\n    }\n    doubleLine(x1, y1, x2, y2, o) {\n        const o1 = this._line(x1, y1, x2, y2, o, true, false);\n        const o2 = this._line(x1, y1, x2, y2, o, true, true);\n        return o1.concat(o2);\n    }\n    _line(x1, y1, x2, y2, o, move, overlay) {\n        const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n        let offset = o.maxRandomnessOffset || 0;\n        if ((offset * offset * 100) > lengthSq) {\n            offset = Math.sqrt(lengthSq) / 10;\n        }\n        const halfOffset = offset / 2;\n        const divergePoint = 0.2 + Math.random() * 0.2;\n        let midDispX = o.bowing * o.maxRandomnessOffset * (y2 - y1) / 200;\n        let midDispY = o.bowing * o.maxRandomnessOffset * (x1 - x2) / 200;\n        midDispX = this.getOffset(-midDispX, midDispX, o);\n        midDispY = this.getOffset(-midDispY, midDispY, o);\n        const ops = [];\n        if (move) {\n            if (overlay) {\n                ops.push({\n                    op: 'move', data: [\n                        x1 + this.getOffset(-halfOffset, halfOffset, o),\n                        y1 + this.getOffset(-halfOffset, halfOffset, o)\n                    ]\n                });\n            }\n            else {\n                ops.push({\n                    op: 'move', data: [\n                        x1 + this.getOffset(-offset, offset, o),\n                        y1 + this.getOffset(-offset, offset, o)\n                    ]\n                });\n            }\n        }\n        if (overlay) {\n            ops.push({\n                op: 'bcurveTo', data: [\n                    midDispX + x1 + (x2 - x1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    midDispY + y1 + (y2 - y1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    midDispX + x1 + 2 * (x2 - x1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    midDispY + y1 + 2 * (y2 - y1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    x2 + this.getOffset(-halfOffset, halfOffset, o),\n                    y2 + this.getOffset(-halfOffset, halfOffset, o)\n                ]\n            });\n        }\n        else {\n            ops.push({\n                op: 'bcurveTo', data: [\n                    midDispX + x1 + (x2 - x1) * divergePoint + this.getOffset(-offset, offset, o),\n                    midDispY + y1 + (y2 - y1) * divergePoint + this.getOffset(-offset, offset, o),\n                    midDispX + x1 + 2 * (x2 - x1) * divergePoint + this.getOffset(-offset, offset, o),\n                    midDispY + y1 + 2 * (y2 - y1) * divergePoint + this.getOffset(-offset, offset, o),\n                    x2 + this.getOffset(-offset, offset, o),\n                    y2 + this.getOffset(-offset, offset, o)\n                ]\n            });\n        }\n        return ops;\n    }\n    _curve(points, closePoint, o) {\n        const len = points.length;\n        let ops = [];\n        if (len > 3) {\n            const b = [];\n            const s = 1 - o.curveTightness;\n            ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n            for (let i = 1; (i + 2) < len; i++) {\n                const cachedVertArray = points[i];\n                b[0] = [cachedVertArray[0], cachedVertArray[1]];\n                b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n                b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n                b[3] = [points[i + 1][0], points[i + 1][1]];\n                ops.push({ op: 'bcurveTo', data: [b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]] });\n            }\n            if (closePoint && closePoint.length === 2) {\n                const ro = o.maxRandomnessOffset;\n                ops.push({ op: 'lineTo', data: [closePoint[0] + this.getOffset(-ro, ro, o), closePoint[1] + +this.getOffset(-ro, ro, o)] });\n            }\n        }\n        else if (len === 3) {\n            ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n            ops.push({\n                op: 'bcurveTo', data: [\n                    points[1][0], points[1][1],\n                    points[2][0], points[2][1],\n                    points[2][0], points[2][1]\n                ]\n            });\n        }\n        else if (len === 2) {\n            ops = ops.concat(this.doubleLine(points[0][0], points[0][1], points[1][0], points[1][1], o));\n        }\n        return ops;\n    }\n    _ellipse(increment, cx, cy, rx, ry, offset, overlap, o) {\n        const radOffset = this.getOffset(-0.5, 0.5, o) - (Math.PI / 2);\n        const points = [];\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n            this.getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n        ]);\n        for (let angle = radOffset; angle < (Math.PI * 2 + radOffset - 0.01); angle = angle + increment) {\n            points.push([\n                this.getOffset(-offset, offset, o) + cx + rx * Math.cos(angle),\n                this.getOffset(-offset, offset, o) + cy + ry * Math.sin(angle)\n            ]);\n        }\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5),\n            this.getOffset(-offset, offset, o) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5)\n        ]);\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.98 * rx * Math.cos(radOffset + overlap),\n            this.getOffset(-offset, offset, o) + cy + 0.98 * ry * Math.sin(radOffset + overlap)\n        ]);\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5),\n            this.getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5)\n        ]);\n        return this._curve(points, null, o);\n    }\n    _curveWithOffset(points, offset, o) {\n        const ps = [];\n        ps.push([\n            points[0][0] + this.getOffset(-offset, offset, o),\n            points[0][1] + this.getOffset(-offset, offset, o),\n        ]);\n        ps.push([\n            points[0][0] + this.getOffset(-offset, offset, o),\n            points[0][1] + this.getOffset(-offset, offset, o),\n        ]);\n        for (let i = 1; i < points.length; i++) {\n            ps.push([\n                points[i][0] + this.getOffset(-offset, offset, o),\n                points[i][1] + this.getOffset(-offset, offset, o),\n            ]);\n            if (i === (points.length - 1)) {\n                ps.push([\n                    points[i][0] + this.getOffset(-offset, offset, o),\n                    points[i][1] + this.getOffset(-offset, offset, o),\n                ]);\n            }\n        }\n        return this._curve(ps, null, o);\n    }\n    _arc(increment, cx, cy, rx, ry, strt, stp, offset, o) {\n        const radOffset = strt + this.getOffset(-0.1, 0.1, o);\n        const points = [];\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n            this.getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n        ]);\n        for (let angle = radOffset; angle <= stp; angle = angle + increment) {\n            points.push([\n                this.getOffset(-offset, offset, o) + cx + rx * Math.cos(angle),\n                this.getOffset(-offset, offset, o) + cy + ry * Math.sin(angle)\n            ]);\n        }\n        points.push([\n            cx + rx * Math.cos(stp),\n            cy + ry * Math.sin(stp)\n        ]);\n        points.push([\n            cx + rx * Math.cos(stp),\n            cy + ry * Math.sin(stp)\n        ]);\n        return this._curve(points, null, o);\n    }\n    _bezierTo(x1, y1, x2, y2, x, y, path, o) {\n        const ops = [];\n        const ros = [o.maxRandomnessOffset || 1, (o.maxRandomnessOffset || 1) + 0.5];\n        let f = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            if (i === 0) {\n                ops.push({ op: 'move', data: [path.x, path.y] });\n            }\n            else {\n                ops.push({ op: 'move', data: [path.x + this.getOffset(-ros[0], ros[0], o), path.y + this.getOffset(-ros[0], ros[0], o)] });\n            }\n            f = [x + this.getOffset(-ros[i], ros[i], o), y + this.getOffset(-ros[i], ros[i], o)];\n            ops.push({\n                op: 'bcurveTo', data: [\n                    x1 + this.getOffset(-ros[i], ros[i], o), y1 + this.getOffset(-ros[i], ros[i], o),\n                    x2 + this.getOffset(-ros[i], ros[i], o), y2 + this.getOffset(-ros[i], ros[i], o),\n                    f[0], f[1]\n                ]\n            });\n        }\n        path.setPosition(f[0], f[1]);\n        return ops;\n    }\n    _processSegment(path, seg, prevSeg, o) {\n        let ops = [];\n        switch (seg.key) {\n            case 'M':\n            case 'm': {\n                const delta = seg.key === 'm';\n                if (seg.data.length >= 2) {\n                    let x = +seg.data[0];\n                    let y = +seg.data[1];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    const ro = 1 * (o.maxRandomnessOffset || 0);\n                    x = x + this.getOffset(-ro, ro, o);\n                    y = y + this.getOffset(-ro, ro, o);\n                    path.setPosition(x, y);\n                    ops.push({ op: 'move', data: [x, y] });\n                }\n                break;\n            }\n            case 'L':\n            case 'l': {\n                const delta = seg.key === 'l';\n                if (seg.data.length >= 2) {\n                    let x = +seg.data[0];\n                    let y = +seg.data[1];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    ops = ops.concat(this.doubleLine(path.x, path.y, x, y, o));\n                    path.setPosition(x, y);\n                }\n                break;\n            }\n            case 'H':\n            case 'h': {\n                const delta = seg.key === 'h';\n                if (seg.data.length) {\n                    let x = +seg.data[0];\n                    if (delta) {\n                        x += path.x;\n                    }\n                    ops = ops.concat(this.doubleLine(path.x, path.y, x, path.y, o));\n                    path.setPosition(x, path.y);\n                }\n                break;\n            }\n            case 'V':\n            case 'v': {\n                const delta = seg.key === 'v';\n                if (seg.data.length) {\n                    let y = +seg.data[0];\n                    if (delta) {\n                        y += path.y;\n                    }\n                    ops = ops.concat(this.doubleLine(path.x, path.y, path.x, y, o));\n                    path.setPosition(path.x, y);\n                }\n                break;\n            }\n            case 'Z':\n            case 'z': {\n                if (path.first) {\n                    ops = ops.concat(this.doubleLine(path.x, path.y, path.first[0], path.first[1], o));\n                    path.setPosition(path.first[0], path.first[1]);\n                    path.first = null;\n                }\n                break;\n            }\n            case 'C':\n            case 'c': {\n                const delta = seg.key === 'c';\n                if (seg.data.length >= 6) {\n                    let x1 = +seg.data[0];\n                    let y1 = +seg.data[1];\n                    let x2 = +seg.data[2];\n                    let y2 = +seg.data[3];\n                    let x = +seg.data[4];\n                    let y = +seg.data[5];\n                    if (delta) {\n                        x1 += path.x;\n                        x2 += path.x;\n                        x += path.x;\n                        y1 += path.y;\n                        y2 += path.y;\n                        y += path.y;\n                    }\n                    const ob = this._bezierTo(x1, y1, x2, y2, x, y, path, o);\n                    ops = ops.concat(ob);\n                    path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n                }\n                break;\n            }\n            case 'S':\n            case 's': {\n                const delta = seg.key === 's';\n                if (seg.data.length >= 4) {\n                    let x2 = +seg.data[0];\n                    let y2 = +seg.data[1];\n                    let x = +seg.data[2];\n                    let y = +seg.data[3];\n                    if (delta) {\n                        x2 += path.x;\n                        x += path.x;\n                        y2 += path.y;\n                        y += path.y;\n                    }\n                    let x1 = x2;\n                    let y1 = y2;\n                    const prevKey = prevSeg ? prevSeg.key : '';\n                    let ref = null;\n                    if (prevKey === 'c' || prevKey === 'C' || prevKey === 's' || prevKey === 'S') {\n                        ref = path.bezierReflectionPoint;\n                    }\n                    if (ref) {\n                        x1 = ref[0];\n                        y1 = ref[1];\n                    }\n                    const ob = this._bezierTo(x1, y1, x2, y2, x, y, path, o);\n                    ops = ops.concat(ob);\n                    path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n                }\n                break;\n            }\n            case 'Q':\n            case 'q': {\n                const delta = seg.key === 'q';\n                if (seg.data.length >= 4) {\n                    let x1 = +seg.data[0];\n                    let y1 = +seg.data[1];\n                    let x = +seg.data[2];\n                    let y = +seg.data[3];\n                    if (delta) {\n                        x1 += path.x;\n                        x += path.x;\n                        y1 += path.y;\n                        y += path.y;\n                    }\n                    const offset1 = 1 * (1 + o.roughness * 0.2);\n                    const offset2 = 1.5 * (1 + o.roughness * 0.22);\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset1, offset1, o), path.y + this.getOffset(-offset1, offset1, o)] });\n                    let f = [x + this.getOffset(-offset1, offset1, o), y + this.getOffset(-offset1, offset1, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset1, offset1, o), y1 + this.getOffset(-offset1, offset1, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset2, offset2, o), path.y + this.getOffset(-offset2, offset2, o)] });\n                    f = [x + this.getOffset(-offset2, offset2, o), y + this.getOffset(-offset2, offset2, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset2, offset2, o), y1 + this.getOffset(-offset2, offset2, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    path.setPosition(f[0], f[1]);\n                    path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n                }\n                break;\n            }\n            case 'T':\n            case 't': {\n                const delta = seg.key === 't';\n                if (seg.data.length >= 2) {\n                    let x = +seg.data[0];\n                    let y = +seg.data[1];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    let x1 = x;\n                    let y1 = y;\n                    const prevKey = prevSeg ? prevSeg.key : '';\n                    let ref = null;\n                    if (prevKey === 'q' || prevKey === 'Q' || prevKey === 't' || prevKey === 'T') {\n                        ref = path.quadReflectionPoint;\n                    }\n                    if (ref) {\n                        x1 = ref[0];\n                        y1 = ref[1];\n                    }\n                    const offset1 = 1 * (1 + o.roughness * 0.2);\n                    const offset2 = 1.5 * (1 + o.roughness * 0.22);\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset1, offset1, o), path.y + this.getOffset(-offset1, offset1, o)] });\n                    let f = [x + this.getOffset(-offset1, offset1, o), y + this.getOffset(-offset1, offset1, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset1, offset1, o), y1 + this.getOffset(-offset1, offset1, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset2, offset2, o), path.y + this.getOffset(-offset2, offset2, o)] });\n                    f = [x + this.getOffset(-offset2, offset2, o), y + this.getOffset(-offset2, offset2, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset2, offset2, o), y1 + this.getOffset(-offset2, offset2, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    path.setPosition(f[0], f[1]);\n                    path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n                }\n                break;\n            }\n            case 'A':\n            case 'a': {\n                const delta = seg.key === 'a';\n                if (seg.data.length >= 7) {\n                    const rx = +seg.data[0];\n                    const ry = +seg.data[1];\n                    const angle = +seg.data[2];\n                    const largeArcFlag = +seg.data[3];\n                    const sweepFlag = +seg.data[4];\n                    let x = +seg.data[5];\n                    let y = +seg.data[6];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    if (x === path.x && y === path.y) {\n                        break;\n                    }\n                    if (rx === 0 || ry === 0) {\n                        ops = ops.concat(this.doubleLine(path.x, path.y, x, y, o));\n                        path.setPosition(x, y);\n                    }\n                    else {\n                        for (let i = 0; i < 1; i++) {\n                            const arcConverter = new RoughArcConverter([path.x, path.y], [x, y], [rx, ry], angle, largeArcFlag ? true : false, sweepFlag ? true : false);\n                            let segment = arcConverter.getNextSegment();\n                            while (segment) {\n                                const ob = this._bezierTo(segment.cp1[0], segment.cp1[1], segment.cp2[0], segment.cp2[1], segment.to[0], segment.to[1], path, o);\n                                ops = ops.concat(ob);\n                                segment = arcConverter.getNextSegment();\n                            }\n                        }\n                    }\n                }\n                break;\n            }\n            default:\n                break;\n        }\n        return ops;\n    }\n}\n","import { RoughRenderer } from './renderer';\nconst hasSelf = typeof self !== 'undefined';\nconst roughScript = hasSelf && self && self.document && self.document.currentScript && self.document.currentScript.src;\nexport function createRenderer(config) {\n    if (hasSelf && roughScript && self && self.workly && config.async && (!config.noWorker)) {\n        const worklySource = config.worklyURL || 'https://cdn.jsdelivr.net/gh/pshihn/workly/dist/workly.min.js';\n        if (worklySource) {\n            const code = `importScripts('${worklySource}', '${roughScript}');\\nworkly.expose(self.rough.createRenderer());`;\n            const ourl = URL.createObjectURL(new Blob([code]));\n            return self.workly.proxy(ourl);\n        }\n    }\n    return new RoughRenderer();\n}\n","import { createRenderer } from './renderer-factory.js';\nconst hasSelf = typeof self !== 'undefined';\nexport class RoughGeneratorBase {\n    constructor(config, surface) {\n        this.defaultOptions = {\n            maxRandomnessOffset: 2,\n            roughness: 1,\n            bowing: 1,\n            stroke: '#000',\n            strokeWidth: 1,\n            curveTightness: 0,\n            curveStepCount: 9,\n            fillStyle: 'hachure',\n            fillWeight: -1,\n            hachureAngle: -41,\n            hachureGap: -1\n        };\n        this.config = config || {};\n        this.surface = surface;\n        this.renderer = createRenderer(this.config);\n        if (this.config.options) {\n            this.defaultOptions = this._options(this.config.options);\n        }\n    }\n    _options(options) {\n        return options ? Object.assign({}, this.defaultOptions, options) : this.defaultOptions;\n    }\n    _drawable(shape, sets, options) {\n        return { shape, sets: sets || [], options: options || this.defaultOptions };\n    }\n    get lib() {\n        return this.renderer;\n    }\n    getCanvasSize() {\n        const val = (w) => {\n            if (w && typeof w === 'object') {\n                if (w.baseVal && w.baseVal.value) {\n                    return w.baseVal.value;\n                }\n            }\n            return w || 100;\n        };\n        if (this.surface) {\n            return [val(this.surface.width), val(this.surface.height)];\n        }\n        return [100, 100];\n    }\n    computePolygonSize(points) {\n        if (points.length) {\n            let left = points[0][0];\n            let right = points[0][0];\n            let top = points[0][1];\n            let bottom = points[0][1];\n            for (let i = 1; i < points.length; i++) {\n                left = Math.min(left, points[i][0]);\n                right = Math.max(right, points[i][0]);\n                top = Math.min(top, points[i][1]);\n                bottom = Math.max(bottom, points[i][1]);\n            }\n            return [(right - left), (bottom - top)];\n        }\n        return [0, 0];\n    }\n    polygonPath(points) {\n        let d = '';\n        if (points.length) {\n            d = `M${points[0][0]},${points[0][1]}`;\n            for (let i = 1; i < points.length; i++) {\n                d = `${d} L${points[i][0]},${points[i][1]}`;\n            }\n        }\n        return d;\n    }\n    computePathSize(d) {\n        let size = [0, 0];\n        if (hasSelf && self.document) {\n            try {\n                const ns = 'http://www.w3.org/2000/svg';\n                const svg = self.document.createElementNS(ns, 'svg');\n                svg.setAttribute('width', '0');\n                svg.setAttribute('height', '0');\n                const pathNode = self.document.createElementNS(ns, 'path');\n                pathNode.setAttribute('d', d);\n                svg.appendChild(pathNode);\n                self.document.body.appendChild(svg);\n                const bb = pathNode.getBBox();\n                if (bb) {\n                    size[0] = bb.width || 0;\n                    size[1] = bb.height || 0;\n                }\n                self.document.body.removeChild(svg);\n            }\n            catch (err) { }\n        }\n        const canvasSize = this.getCanvasSize();\n        if (!(size[0] * size[1])) {\n            size = canvasSize;\n        }\n        return size;\n    }\n    toPaths(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.defaultOptions;\n        const paths = [];\n        for (const drawing of sets) {\n            let path = null;\n            switch (drawing.type) {\n                case 'path':\n                    path = {\n                        d: this.opsToPath(drawing),\n                        stroke: o.stroke,\n                        strokeWidth: o.strokeWidth,\n                        fill: 'none'\n                    };\n                    break;\n                case 'fillPath':\n                    path = {\n                        d: this.opsToPath(drawing),\n                        stroke: 'none',\n                        strokeWidth: 0,\n                        fill: o.fill || 'none'\n                    };\n                    break;\n                case 'fillSketch':\n                    path = this.fillSketch(drawing, o);\n                    break;\n                case 'path2Dfill':\n                    path = {\n                        d: drawing.path || '',\n                        stroke: 'none',\n                        strokeWidth: 0,\n                        fill: o.fill || 'none'\n                    };\n                    break;\n                case 'path2Dpattern': {\n                    const size = drawing.size;\n                    const pattern = {\n                        x: 0, y: 0, width: 1, height: 1,\n                        viewBox: `0 0 ${Math.round(size[0])} ${Math.round(size[1])}`,\n                        patternUnits: 'objectBoundingBox',\n                        path: this.fillSketch(drawing, o)\n                    };\n                    path = {\n                        d: drawing.path,\n                        stroke: 'none',\n                        strokeWidth: 0,\n                        pattern: pattern\n                    };\n                    break;\n                }\n            }\n            if (path) {\n                paths.push(path);\n            }\n        }\n        return paths;\n    }\n    fillSketch(drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        return {\n            d: this.opsToPath(drawing),\n            stroke: o.fill || 'none',\n            strokeWidth: fweight,\n            fill: 'none'\n        };\n    }\n    opsToPath(drawing) {\n        let path = '';\n        for (const item of drawing.ops) {\n            const data = item.data;\n            switch (item.op) {\n                case 'move':\n                    path += `M${data[0]} ${data[1]} `;\n                    break;\n                case 'bcurveTo':\n                    path += `C${data[0]} ${data[1]}, ${data[2]} ${data[3]}, ${data[4]} ${data[5]} `;\n                    break;\n                case 'qcurveTo':\n                    path += `Q${data[0]} ${data[1]}, ${data[2]} ${data[3]} `;\n                    break;\n                case 'lineTo':\n                    path += `L${data[0]} ${data[1]} `;\n                    break;\n            }\n        }\n        return path.trim();\n    }\n}\n","import { RoughGeneratorBase } from './generator-base';\nexport class RoughGenerator extends RoughGeneratorBase {\n    constructor(config, surface) {\n        super(config, surface);\n    }\n    line(x1, y1, x2, y2, options) {\n        const o = this._options(options);\n        return this._drawable('line', [this.lib.line(x1, y1, x2, y2, o)], o);\n    }\n    rectangle(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            const points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n            if (o.fillStyle === 'solid') {\n                paths.push(this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                paths.push(this.lib.patternFillPolygon(points, o));\n            }\n        }\n        paths.push(this.lib.rectangle(x, y, width, height, o));\n        return this._drawable('rectangle', paths, o);\n    }\n    ellipse(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = this.lib.ellipse(x, y, width, height, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(this.lib.patternFillEllipse(x, y, width, height, o));\n            }\n        }\n        paths.push(this.lib.ellipse(x, y, width, height, o));\n        return this._drawable('ellipse', paths, o);\n    }\n    circle(x, y, diameter, options) {\n        const ret = this.ellipse(x, y, diameter, diameter, options);\n        ret.shape = 'circle';\n        return ret;\n    }\n    linearPath(points, options) {\n        const o = this._options(options);\n        return this._drawable('linearPath', [this.lib.linearPath(points, false, o)], o);\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (closed && o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = this.lib.arc(x, y, width, height, start, stop, true, false, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(this.lib.patternFillArc(x, y, width, height, start, stop, o));\n            }\n        }\n        paths.push(this.lib.arc(x, y, width, height, start, stop, closed, true, o));\n        return this._drawable('arc', paths, o);\n    }\n    curve(points, options) {\n        const o = this._options(options);\n        return this._drawable('curve', [this.lib.curve(points, o)], o);\n    }\n    polygon(points, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                paths.push(this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                const size = this.computePolygonSize(points);\n                const fillPoints = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = this.lib.patternFillPolygon(fillPoints, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = this.polygonPath(points);\n                paths.push(shape);\n            }\n        }\n        paths.push(this.lib.linearPath(points, true, o));\n        return this._drawable('polygon', paths, o);\n    }\n    path(d, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (!d) {\n            return this._drawable('path', paths, o);\n        }\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = { type: 'path2Dfill', path: d, ops: [] };\n                paths.push(shape);\n            }\n            else {\n                const size = this.computePathSize(d);\n                const points = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = this.lib.patternFillPolygon(points, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = d;\n                paths.push(shape);\n            }\n        }\n        paths.push(this.lib.svgPath(d, o));\n        return this._drawable('path', paths, o);\n    }\n}\n","import { RoughRenderer } from './renderer';\nconst hasDocument = typeof document !== 'undefined';\nexport class RoughCanvasBase {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext('2d');\n    }\n    static createRenderer() {\n        return new RoughRenderer();\n    }\n    draw(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.getDefaultOptions();\n        const ctx = this.ctx;\n        for (const drawing of sets) {\n            switch (drawing.type) {\n                case 'path':\n                    ctx.save();\n                    ctx.strokeStyle = o.stroke;\n                    ctx.lineWidth = o.strokeWidth;\n                    this._drawToContext(ctx, drawing);\n                    ctx.restore();\n                    break;\n                case 'fillPath':\n                    ctx.save();\n                    ctx.fillStyle = o.fill || '';\n                    this._drawToContext(ctx, drawing);\n                    ctx.restore();\n                    break;\n                case 'fillSketch':\n                    this.fillSketch(ctx, drawing, o);\n                    break;\n                case 'path2Dfill': {\n                    this.ctx.save();\n                    this.ctx.fillStyle = o.fill || '';\n                    const p2d = new Path2D(drawing.path);\n                    this.ctx.fill(p2d);\n                    this.ctx.restore();\n                    break;\n                }\n                case 'path2Dpattern': {\n                    const doc = this.canvas.ownerDocument || (hasDocument && document);\n                    if (doc) {\n                        const size = drawing.size;\n                        const hcanvas = doc.createElement('canvas');\n                        const hcontext = hcanvas.getContext('2d');\n                        const bbox = this.computeBBox(drawing.path);\n                        if (bbox && (bbox.width || bbox.height)) {\n                            hcanvas.width = this.canvas.width;\n                            hcanvas.height = this.canvas.height;\n                            hcontext.translate(bbox.x || 0, bbox.y || 0);\n                        }\n                        else {\n                            hcanvas.width = size[0];\n                            hcanvas.height = size[1];\n                        }\n                        this.fillSketch(hcontext, drawing, o);\n                        this.ctx.save();\n                        this.ctx.fillStyle = this.ctx.createPattern(hcanvas, 'repeat');\n                        const p2d = new Path2D(drawing.path);\n                        this.ctx.fill(p2d);\n                        this.ctx.restore();\n                    }\n                    else {\n                        console.error('Cannot render path2Dpattern. No defs/document defined.');\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    computeBBox(d) {\n        if (hasDocument) {\n            try {\n                const ns = 'http://www.w3.org/2000/svg';\n                const svg = document.createElementNS(ns, 'svg');\n                svg.setAttribute('width', '0');\n                svg.setAttribute('height', '0');\n                const pathNode = self.document.createElementNS(ns, 'path');\n                pathNode.setAttribute('d', d);\n                svg.appendChild(pathNode);\n                document.body.appendChild(svg);\n                const bbox = pathNode.getBBox();\n                document.body.removeChild(svg);\n                return bbox;\n            }\n            catch (err) { }\n        }\n        return null;\n    }\n    fillSketch(ctx, drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        ctx.save();\n        ctx.strokeStyle = o.fill || '';\n        ctx.lineWidth = fweight;\n        this._drawToContext(ctx, drawing);\n        ctx.restore();\n    }\n    _drawToContext(ctx, drawing) {\n        ctx.beginPath();\n        for (const item of drawing.ops) {\n            const data = item.data;\n            switch (item.op) {\n                case 'move':\n                    ctx.moveTo(data[0], data[1]);\n                    break;\n                case 'bcurveTo':\n                    ctx.bezierCurveTo(data[0], data[1], data[2], data[3], data[4], data[5]);\n                    break;\n                case 'qcurveTo':\n                    ctx.quadraticCurveTo(data[0], data[1], data[2], data[3]);\n                    break;\n                case 'lineTo':\n                    ctx.lineTo(data[0], data[1]);\n                    break;\n            }\n        }\n        if (drawing.type === 'fillPath') {\n            ctx.fill();\n        }\n        else {\n            ctx.stroke();\n        }\n    }\n}\n","import { RoughGenerator } from './generator';\nimport { RoughCanvasBase } from './canvas-base';\nexport class RoughCanvas extends RoughCanvasBase {\n    constructor(canvas, config) {\n        super(canvas);\n        this.gen = new RoughGenerator(config || null, this.canvas);\n    }\n    get generator() {\n        return this.gen;\n    }\n    getDefaultOptions() {\n        return this.gen.defaultOptions;\n    }\n    line(x1, y1, x2, y2, options) {\n        const d = this.gen.line(x1, y1, x2, y2, options);\n        this.draw(d);\n        return d;\n    }\n    rectangle(x, y, width, height, options) {\n        const d = this.gen.rectangle(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    ellipse(x, y, width, height, options) {\n        const d = this.gen.ellipse(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    circle(x, y, diameter, options) {\n        const d = this.gen.circle(x, y, diameter, options);\n        this.draw(d);\n        return d;\n    }\n    linearPath(points, options) {\n        const d = this.gen.linearPath(points, options);\n        this.draw(d);\n        return d;\n    }\n    polygon(points, options) {\n        const d = this.gen.polygon(points, options);\n        this.draw(d);\n        return d;\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n        this.draw(d);\n        return d;\n    }\n    curve(points, options) {\n        const d = this.gen.curve(points, options);\n        this.draw(d);\n        return d;\n    }\n    path(d, options) {\n        const drawing = this.gen.path(d, options);\n        this.draw(drawing);\n        return drawing;\n    }\n}\n","import { RoughGeneratorBase } from './generator-base';\nexport class RoughGeneratorAsync extends RoughGeneratorBase {\n    async line(x1, y1, x2, y2, options) {\n        const o = this._options(options);\n        return this._drawable('line', [await this.lib.line(x1, y1, x2, y2, o)], o);\n    }\n    async rectangle(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            const points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n            if (o.fillStyle === 'solid') {\n                paths.push(await this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                paths.push(await this.lib.patternFillPolygon(points, o));\n            }\n        }\n        paths.push(await this.lib.rectangle(x, y, width, height, o));\n        return this._drawable('rectangle', paths, o);\n    }\n    async ellipse(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = await this.lib.ellipse(x, y, width, height, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(await this.lib.patternFillEllipse(x, y, width, height, o));\n            }\n        }\n        paths.push(await this.lib.ellipse(x, y, width, height, o));\n        return this._drawable('ellipse', paths, o);\n    }\n    async circle(x, y, diameter, options) {\n        const ret = await this.ellipse(x, y, diameter, diameter, options);\n        ret.shape = 'circle';\n        return ret;\n    }\n    async linearPath(points, options) {\n        const o = this._options(options);\n        return this._drawable('linearPath', [await this.lib.linearPath(points, false, o)], o);\n    }\n    async arc(x, y, width, height, start, stop, closed = false, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (closed && o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = await this.lib.arc(x, y, width, height, start, stop, true, false, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(await this.lib.patternFillArc(x, y, width, height, start, stop, o));\n            }\n        }\n        paths.push(await this.lib.arc(x, y, width, height, start, stop, closed, true, o));\n        return this._drawable('arc', paths, o);\n    }\n    async curve(points, options) {\n        const o = this._options(options);\n        return this._drawable('curve', [await this.lib.curve(points, o)], o);\n    }\n    async polygon(points, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                paths.push(await this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                const size = this.computePolygonSize(points);\n                const fillPoints = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = await this.lib.patternFillPolygon(fillPoints, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = this.polygonPath(points);\n                paths.push(shape);\n            }\n        }\n        paths.push(await this.lib.linearPath(points, true, o));\n        return this._drawable('polygon', paths, o);\n    }\n    async path(d, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (!d) {\n            return this._drawable('path', paths, o);\n        }\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = { type: 'path2Dfill', path: d, ops: [] };\n                paths.push(shape);\n            }\n            else {\n                const size = this.computePathSize(d);\n                const points = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = await this.lib.patternFillPolygon(points, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = d;\n                paths.push(shape);\n            }\n        }\n        paths.push(await this.lib.svgPath(d, o));\n        return this._drawable('path', paths, o);\n    }\n}\n","import { RoughGeneratorAsync } from './generator-async';\nimport { RoughCanvasBase } from './canvas-base';\nexport class RoughCanvasAsync extends RoughCanvasBase {\n    constructor(canvas, config) {\n        super(canvas);\n        this.genAsync = new RoughGeneratorAsync(config || null, this.canvas);\n    }\n    get generator() {\n        return this.genAsync;\n    }\n    getDefaultOptions() {\n        return this.genAsync.defaultOptions;\n    }\n    async line(x1, y1, x2, y2, options) {\n        const d = await this.genAsync.line(x1, y1, x2, y2, options);\n        this.draw(d);\n        return d;\n    }\n    async rectangle(x, y, width, height, options) {\n        const d = await this.genAsync.rectangle(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    async ellipse(x, y, width, height, options) {\n        const d = await this.genAsync.ellipse(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    async circle(x, y, diameter, options) {\n        const d = await this.genAsync.circle(x, y, diameter, options);\n        this.draw(d);\n        return d;\n    }\n    async linearPath(points, options) {\n        const d = await this.genAsync.linearPath(points, options);\n        this.draw(d);\n        return d;\n    }\n    async polygon(points, options) {\n        const d = await this.genAsync.polygon(points, options);\n        this.draw(d);\n        return d;\n    }\n    async arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = await this.genAsync.arc(x, y, width, height, start, stop, closed, options);\n        this.draw(d);\n        return d;\n    }\n    async curve(points, options) {\n        const d = await this.genAsync.curve(points, options);\n        this.draw(d);\n        return d;\n    }\n    async path(d, options) {\n        const drawing = await this.genAsync.path(d, options);\n        this.draw(drawing);\n        return drawing;\n    }\n}\n","import { RoughRenderer } from './renderer';\nconst hasDocument = typeof document !== 'undefined';\nexport class RoughSVGBase {\n    constructor(svg) {\n        this.svg = svg;\n    }\n    static createRenderer() {\n        return new RoughRenderer();\n    }\n    get defs() {\n        const doc = this.svg.ownerDocument || (hasDocument && document);\n        if (doc) {\n            if (!this._defs) {\n                const dnode = doc.createElementNS('http://www.w3.org/2000/svg', 'defs');\n                if (this.svg.firstChild) {\n                    this.svg.insertBefore(dnode, this.svg.firstChild);\n                }\n                else {\n                    this.svg.appendChild(dnode);\n                }\n                this._defs = dnode;\n            }\n        }\n        return this._defs || null;\n    }\n    draw(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.getDefaultOptions();\n        const doc = this.svg.ownerDocument || (hasDocument && document);\n        const g = doc.createElementNS('http://www.w3.org/2000/svg', 'g');\n        for (const drawing of sets) {\n            let path = null;\n            switch (drawing.type) {\n                case 'path': {\n                    path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('d', this.opsToPath(drawing));\n                    path.style.stroke = o.stroke;\n                    path.style.strokeWidth = o.strokeWidth + '';\n                    path.style.fill = 'none';\n                    break;\n                }\n                case 'fillPath': {\n                    path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('d', this.opsToPath(drawing));\n                    path.style.stroke = 'none';\n                    path.style.strokeWidth = '0';\n                    path.style.fill = o.fill || null;\n                    break;\n                }\n                case 'fillSketch': {\n                    path = this.fillSketch(doc, drawing, o);\n                    break;\n                }\n                case 'path2Dfill': {\n                    path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('d', drawing.path || '');\n                    path.style.stroke = 'none';\n                    path.style.strokeWidth = '0';\n                    path.style.fill = o.fill || null;\n                    break;\n                }\n                case 'path2Dpattern': {\n                    if (!this.defs) {\n                        console.error('Cannot render path2Dpattern. No defs/document defined.');\n                    }\n                    else {\n                        const size = drawing.size;\n                        const pattern = doc.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n                        const id = `rough-${Math.floor(Math.random() * (Number.MAX_SAFE_INTEGER || 999999))}`;\n                        pattern.setAttribute('id', id);\n                        pattern.setAttribute('x', '0');\n                        pattern.setAttribute('y', '0');\n                        pattern.setAttribute('width', '1');\n                        pattern.setAttribute('height', '1');\n                        pattern.setAttribute('height', '1');\n                        pattern.setAttribute('viewBox', `0 0 ${Math.round(size[0])} ${Math.round(size[1])}`);\n                        pattern.setAttribute('patternUnits', 'objectBoundingBox');\n                        const patternPath = this.fillSketch(doc, drawing, o);\n                        pattern.appendChild(patternPath);\n                        this.defs.appendChild(pattern);\n                        path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        path.setAttribute('d', drawing.path || '');\n                        path.style.stroke = 'none';\n                        path.style.strokeWidth = '0';\n                        path.style.fill = `url(#${id})`;\n                    }\n                    break;\n                }\n            }\n            if (path) {\n                g.appendChild(path);\n            }\n        }\n        return g;\n    }\n    fillSketch(doc, drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        const path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', this.opsToPath(drawing));\n        path.style.stroke = o.fill || null;\n        path.style.strokeWidth = fweight + '';\n        path.style.fill = 'none';\n        return path;\n    }\n}\n","import { RoughGenerator } from './generator';\nimport { RoughSVGBase } from './svg-base';\nexport class RoughSVG extends RoughSVGBase {\n    constructor(svg, config) {\n        super(svg);\n        this.gen = new RoughGenerator(config || null, this.svg);\n    }\n    get generator() {\n        return this.gen;\n    }\n    getDefaultOptions() {\n        return this.gen.defaultOptions;\n    }\n    opsToPath(drawing) {\n        return this.gen.opsToPath(drawing);\n    }\n    line(x1, y1, x2, y2, options) {\n        const d = this.gen.line(x1, y1, x2, y2, options);\n        return this.draw(d);\n    }\n    rectangle(x, y, width, height, options) {\n        const d = this.gen.rectangle(x, y, width, height, options);\n        return this.draw(d);\n    }\n    ellipse(x, y, width, height, options) {\n        const d = this.gen.ellipse(x, y, width, height, options);\n        return this.draw(d);\n    }\n    circle(x, y, diameter, options) {\n        const d = this.gen.circle(x, y, diameter, options);\n        return this.draw(d);\n    }\n    linearPath(points, options) {\n        const d = this.gen.linearPath(points, options);\n        return this.draw(d);\n    }\n    polygon(points, options) {\n        const d = this.gen.polygon(points, options);\n        return this.draw(d);\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n        return this.draw(d);\n    }\n    curve(points, options) {\n        const d = this.gen.curve(points, options);\n        return this.draw(d);\n    }\n    path(d, options) {\n        const drawing = this.gen.path(d, options);\n        return this.draw(drawing);\n    }\n}\n","import { RoughGeneratorAsync } from './generator-async';\nimport { RoughSVGBase } from './svg-base';\nexport class RoughSVGAsync extends RoughSVGBase {\n    constructor(svg, config) {\n        super(svg);\n        this.genAsync = new RoughGeneratorAsync(config || null, this.svg);\n    }\n    get generator() {\n        return this.genAsync;\n    }\n    getDefaultOptions() {\n        return this.genAsync.defaultOptions;\n    }\n    opsToPath(drawing) {\n        return this.genAsync.opsToPath(drawing);\n    }\n    async line(x1, y1, x2, y2, options) {\n        const d = await this.genAsync.line(x1, y1, x2, y2, options);\n        return this.draw(d);\n    }\n    async rectangle(x, y, width, height, options) {\n        const d = await this.genAsync.rectangle(x, y, width, height, options);\n        return this.draw(d);\n    }\n    async ellipse(x, y, width, height, options) {\n        const d = await this.genAsync.ellipse(x, y, width, height, options);\n        return this.draw(d);\n    }\n    async circle(x, y, diameter, options) {\n        const d = await this.genAsync.circle(x, y, diameter, options);\n        return this.draw(d);\n    }\n    async linearPath(points, options) {\n        const d = await this.genAsync.linearPath(points, options);\n        return this.draw(d);\n    }\n    async polygon(points, options) {\n        const d = await this.genAsync.polygon(points, options);\n        return this.draw(d);\n    }\n    async arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = await this.genAsync.arc(x, y, width, height, start, stop, closed, options);\n        return this.draw(d);\n    }\n    async curve(points, options) {\n        const d = await this.genAsync.curve(points, options);\n        return this.draw(d);\n    }\n    async path(d, options) {\n        const drawing = await this.genAsync.path(d, options);\n        return this.draw(drawing);\n    }\n}\n","import { RoughCanvas } from './canvas';\nimport { RoughGenerator } from './generator';\nimport { RoughGeneratorAsync } from './generator-async';\nimport { RoughCanvasAsync } from './canvas-async';\nimport { RoughSVG } from './svg';\nimport { RoughSVGAsync } from './svg-async';\nexport default {\n    canvas(canvas, config) {\n        if (config && config.async) {\n            return new RoughCanvasAsync(canvas, config);\n        }\n        return new RoughCanvas(canvas, config);\n    },\n    svg(svg, config) {\n        if (config && config.async) {\n            return new RoughSVGAsync(svg, config);\n        }\n        return new RoughSVG(svg, config);\n    },\n    createRenderer() {\n        return RoughCanvas.createRenderer();\n    },\n    generator(config, surface) {\n        if (config && config.async) {\n            return new RoughGeneratorAsync(config, surface);\n        }\n        return new RoughGenerator(config, surface);\n    }\n};\n","import rough from 'roughjs'\n\nfunction Drawable () {\n  this.createAndAppend = function (parent) {\n    this.element = document.createElement('canvas')\n    parent.appendChild(this.element)\n    this.context2d = this.element.getContext('2d')\n    this.roughCanvas = rough.canvas(this.element)\n  }\n  this.resize = function (size) {\n    this.element.width = size.width\n    this.element.height = size.height\n  }\n  this.getSize = function () {\n    return {\n      width: this.element.width,\n      height: this.element.height\n    }\n  }\n  this.clear = function () {\n    this.context2d.clearRect(0, 0, this.element.width, this.element.height)\n  }\n\n  this.element = null\n  this.context2d = null\n  this.roughCanvas = null\n}\n\nexport default Drawable\n","var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function(){\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function(){\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window != 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder(){\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function(data) {\r\n  if(typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function() {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if(!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function() {\r\n  this.flush();\r\n  if(binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for(var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function(data){\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function(data){\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data){\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function(){\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80){\r\n    var positive_fixnum = type;\r\n    return positive_fixnum;\r\n  } else if ((type ^ 0xe0) < 0x20){\r\n    var negative_fixnum = (type ^ 0xe0) - 0x20;\r\n    return negative_fixnum;\r\n  }\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f){\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f){\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f){\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f){\r\n    return this.unpack_map(size);\r\n  }\r\n  switch(type){\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n}\r\n\r\nUnpacker.prototype.unpack_uint8 = function(){\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function(){\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint32 = function(){\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n     ((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint64 = function(){\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n   ((((((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3]) * 256 +\r\n       bytes[4]) * 256 +\r\n       bytes[5]) * 256 +\r\n       bytes[6]) * 256 +\r\n       bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n}\r\n\r\n\r\nUnpacker.prototype.unpack_int8 = function(){\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80 ) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function(){\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000 ) ? uint16 : uint16 - (1 << 16);\r\n}\r\n\r\nUnpacker.prototype.unpack_int32 = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31) ) ? uint32 :\r\n    uint32 - Math.pow(2, 32);\r\n}\r\n\r\nUnpacker.prototype.unpack_int64 = function(){\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63) ) ? uint64 :\r\n    uint64 - Math.pow(2, 64);\r\n}\r\n\r\nUnpacker.prototype.unpack_raw = function(size){\r\n  if ( this.length < this.index + size){\r\n    throw new Error('BinaryPackFailure: index is out of range'\r\n      + ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n    //buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n}\r\n\r\nUnpacker.prototype.unpack_string = function(size){\r\n  var bytes = this.read(size);\r\n  var i = 0, str = '', c, code;\r\n  while(i < size){\r\n    c = bytes[i];\r\n    if ( c < 128){\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32){\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i+1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i+1] & 63) << 6) |\r\n        (bytes[i+2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n  this.index += size;\r\n  return str;\r\n}\r\n\r\nUnpacker.prototype.unpack_array = function(size){\r\n  var objects = new Array(size);\r\n  for(var i = 0; i < size ; i++){\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n}\r\n\r\nUnpacker.prototype.unpack_map = function(size){\r\n  var map = {};\r\n  for(var i = 0; i < size ; i++){\r\n    var key  = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n}\r\n\r\nUnpacker.prototype.unpack_float = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp  = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = ( uint32 & 0x7fffff ) | 0x800000;\r\n  return (sign == 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n}\r\n\r\nUnpacker.prototype.unpack_double = function(){\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp  = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = ( h32 & 0xfffff ) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32   * Math.pow(2, exp - 52);\r\n  return (sign == 0 ? 1 : -1) * frac;\r\n}\r\n\r\nUnpacker.prototype.read = function(length){\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n}\r\n\r\nfunction Packer(){\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function(){\r\n  return this.bufferBuilder.getBuffer();\r\n}\r\n\r\nPacker.prototype.pack = function(value){\r\n  var type = typeof(value);\r\n  if (type == 'string'){\r\n    this.pack_string(value);\r\n  } else if (type == 'number'){\r\n    if (Math.floor(value) === value){\r\n      this.pack_integer(value);\r\n    } else{\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type == 'boolean'){\r\n    if (value === true){\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false){\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type == 'undefined'){\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type == 'object'){\r\n    if (value === null){\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array){\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value){\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if (constructor == Object){\r\n        this.pack_object(value);\r\n      } else if (constructor == Date){\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack == 'function'){\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n}\r\n\r\n\r\nPacker.prototype.pack_bin = function(blob){\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xda) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n}\r\n\r\nPacker.prototype.pack_string = function(str){\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xd8) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n}\r\n\r\nPacker.prototype.pack_array = function(ary){\r\n  var length = ary.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xdc)\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var i = 0; i < length ; i++){\r\n    this.pack(ary[i]);\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_integer = function(num){\r\n  if ( -0x20 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (0x00 <= num && num <= 0xff){\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (-0x80 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if ( 0x0000 <= num && num <= 0xffff){\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (-0x8000 <= num && num <= 0x7fff){\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if ( 0x00000000 <= num && num <= 0xffffffff){\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (-0x80000000 <= num && num <= 0x7fffffff){\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (-0x8000000000000000 <= num && num <= 0x7FFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (0x0000000000000000 <= num && num <= 0xFFFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else{\r\n    throw new Error('Invalid integer');\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_double = function(num){\r\n  var sign = 0;\r\n  if (num < 0){\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp  = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32   = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp+1023) << 20) |\r\n      (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n}\r\n\r\nPacker.prototype.pack_object = function(obj){\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var prop in obj){\r\n    if (obj.hasOwnProperty(prop)){\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_uint8 = function(num){\r\n  this.bufferBuilder.append(num);\r\n}\r\n\r\nPacker.prototype.pack_uint16 = function(num){\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_uint32 = function(num){\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_uint64 = function(num){\r\n  var high = num / Math.pow(2, 32);\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int8 = function(num){\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int16 = function(num){\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int32 = function(num){\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int64 = function(num){\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nfunction _utf8Replace(m){\r\n  var code = m.charCodeAt(0);\r\n\r\n  if(code <= 0x7ff) return '00';\r\n  if(code <= 0xffff) return '000';\r\n  if(code <= 0x1fffff) return '0000';\r\n  if(code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length(str){\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","module.exports.RTCSessionDescription = window.RTCSessionDescription ||\n\twindow.mozRTCSessionDescription;\nmodule.exports.RTCPeerConnection = window.RTCPeerConnection ||\n\twindow.mozRTCPeerConnection || window.webkitRTCPeerConnection;\nmodule.exports.RTCIceCandidate = window.RTCIceCandidate ||\n\twindow.mozRTCIceCandidate;\n","var defaultConfig = { iceServers: [{ url: \"stun:stun.l.google.com:19302\" }] };\nvar dataCount = 1;\n\nvar BinaryPack = require(\"js-binarypack\");\nvar RTCPeerConnection = require(\"./adapter\").RTCPeerConnection;\n\nvar util = {\n  noop: function() {},\n\n  CLOUD_HOST: \"0.peerjs.com\",\n  CLOUD_PORT: 9000,\n\n  // Browsers that need chunking:\n  chunkedBrowsers: { Chrome: 1 },\n  chunkedMTU: 16300, // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Logging logic\n  logLevel: 0,\n  setLogLevel: function(level) {\n    var debugLevel = parseInt(level, 10);\n    if (!isNaN(parseInt(level, 10))) {\n      util.logLevel = debugLevel;\n    } else {\n      // If they are using truthy/falsy values for debug\n      util.logLevel = level ? 3 : 0;\n    }\n    util.log = util.warn = util.error = util.noop;\n    if (util.logLevel > 0) {\n      util.error = util._printWith(\"ERROR\");\n    }\n    if (util.logLevel > 1) {\n      util.warn = util._printWith(\"WARNING\");\n    }\n    if (util.logLevel > 2) {\n      util.log = util._print;\n    }\n  },\n  setLogFunction: function(fn) {\n    if (fn.constructor !== Function) {\n      util.warn(\n        \"The log function you passed in is not a function. Defaulting to regular logs.\"\n      );\n    } else {\n      util._print = fn;\n    }\n  },\n\n  _printWith: function(prefix) {\n    return function() {\n      var copy = Array.prototype.slice.call(arguments);\n      copy.unshift(prefix);\n      util._print.apply(util, copy);\n    };\n  },\n  _print: function() {\n    var err = false;\n    var copy = Array.prototype.slice.call(arguments);\n    copy.unshift(\"PeerJS: \");\n    for (var i = 0, l = copy.length; i < l; i++) {\n      if (copy[i] instanceof Error) {\n        copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n        err = true;\n      }\n    }\n    err ? console.error.apply(console, copy) : console.log.apply(console, copy);\n  },\n  //\n\n  // Returns browser-agnostic default config\n  defaultConfig: defaultConfig,\n  //\n\n  // Returns the current browser.\n  browser: (function() {\n    if (window.mozRTCPeerConnection) {\n      return \"Firefox\";\n    } else if (window.webkitRTCPeerConnection) {\n      return \"Chrome\";\n    } else if (window.RTCPeerConnection) {\n      return \"Supported\";\n    } else {\n      return \"Unsupported\";\n    }\n  })(),\n  //\n\n  // Lists which features are supported\n  supports: (function() {\n    if (typeof RTCPeerConnection === \"undefined\") {\n      return {};\n    }\n\n    var data = true;\n    var audioVideo = true;\n\n    var binaryBlob = false;\n    var sctp = false;\n    var onnegotiationneeded = !!window.webkitRTCPeerConnection;\n\n    var pc, dc;\n    try {\n      pc = new RTCPeerConnection(defaultConfig, {\n        optional: [{ RtpDataChannels: true }]\n      });\n    } catch (e) {\n      data = false;\n      audioVideo = false;\n    }\n\n    if (data) {\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\");\n      } catch (e) {\n        data = false;\n      }\n    }\n\n    if (data) {\n      // Binary test\n      try {\n        dc.binaryType = \"blob\";\n        binaryBlob = true;\n      } catch (e) {}\n\n      // Reliable test.\n      // Unfortunately Chrome is a bit unreliable about whether or not they\n      // support reliable.\n      var reliablePC = new RTCPeerConnection(defaultConfig, {});\n      try {\n        var reliableDC = reliablePC.createDataChannel(\n          \"_PEERJSRELIABLETEST\",\n          {}\n        );\n        sctp = reliableDC.reliable;\n      } catch (e) {}\n      reliablePC.close();\n    }\n\n    // FIXME: not really the best check...\n    if (audioVideo) {\n      audioVideo = !!pc.addStream;\n    }\n\n    // FIXME: this is not great because in theory it doesn't work for\n    // av-only browsers (?).\n    /*\n    if (!onnegotiationneeded && data) {\n      // sync default check.\n      var negotiationPC = new RTCPeerConnection(defaultConfig, {optional: [{RtpDataChannels: true}]});\n      negotiationPC.onnegotiationneeded = function() {\n        onnegotiationneeded = true;\n        // async check.\n        if (util && util.supports) {\n          util.supports.onnegotiationneeded = true;\n        }\n      };\n      negotiationPC.createDataChannel('_PEERJSNEGOTIATIONTEST');\n\n      setTimeout(function() {\n        negotiationPC.close();\n      }, 1000);\n    }\n    */\n\n    if (pc) {\n      pc.close();\n    }\n\n    return {\n      audioVideo: audioVideo,\n      data: data,\n      binaryBlob: binaryBlob,\n      binary: sctp, // deprecated; sctp implies binary support.\n      reliable: sctp, // deprecated; sctp implies reliable data.\n      sctp: sctp,\n      onnegotiationneeded: onnegotiationneeded\n    };\n  })(),\n  //\n\n  // Ensure alphanumeric ids\n  validateId: function(id) {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(id);\n  },\n\n  validateKey: function(key) {\n    // Allow empty keys\n    return !key || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.exec(key);\n  },\n\n  debug: false,\n\n  inherits: function(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  },\n  extend: function(dest, source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        dest[key] = source[key];\n      }\n    }\n    return dest;\n  },\n  pack: BinaryPack.pack,\n  unpack: BinaryPack.unpack,\n\n  log: function() {\n    if (util.debug) {\n      var err = false;\n      var copy = Array.prototype.slice.call(arguments);\n      copy.unshift(\"PeerJS: \");\n      for (var i = 0, l = copy.length; i < l; i++) {\n        if (copy[i] instanceof Error) {\n          copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n          err = true;\n        }\n      }\n      err\n        ? console.error.apply(console, copy)\n        : console.log.apply(console, copy);\n    }\n  },\n\n  setZeroTimeout: (function(global) {\n    var timeouts = [];\n    var messageName = \"zero-timeout-message\";\n\n    // Like setTimeout, but only takes a function argument.\t There's\n    // no time argument (always zero) and no arguments (you have to\n    // use a closure).\n    function setZeroTimeoutPostMessage(fn) {\n      timeouts.push(fn);\n      global.postMessage(messageName, \"*\");\n    }\n\n    function handleMessage(event) {\n      if (event.source == global && event.data == messageName) {\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n        if (timeouts.length) {\n          timeouts.shift()();\n        }\n      }\n    }\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", handleMessage, true);\n    } else if (global.attachEvent) {\n      global.attachEvent(\"onmessage\", handleMessage);\n    }\n    return setZeroTimeoutPostMessage;\n  })(window),\n\n  // Binary stuff\n\n  // chunks a blob.\n  chunk: function(bl) {\n    var chunks = [];\n    var size = bl.size;\n    var start = (index = 0);\n    var total = Math.ceil(size / util.chunkedMTU);\n    while (start < size) {\n      var end = Math.min(size, start + util.chunkedMTU);\n      var b = bl.slice(start, end);\n\n      var chunk = {\n        __peerData: dataCount,\n        n: index,\n        data: b,\n        total: total\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index += 1;\n    }\n    dataCount += 1;\n    return chunks;\n  },\n\n  blobToArrayBuffer: function(blob, cb) {\n    var fr = new FileReader();\n    fr.onload = function(evt) {\n      cb(evt.target.result);\n    };\n    fr.readAsArrayBuffer(blob);\n  },\n  blobToBinaryString: function(blob, cb) {\n    var fr = new FileReader();\n    fr.onload = function(evt) {\n      cb(evt.target.result);\n    };\n    fr.readAsBinaryString(blob);\n  },\n  binaryStringToArrayBuffer: function(binary) {\n    var byteArray = new Uint8Array(binary.length);\n    for (var i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n    return byteArray.buffer;\n  },\n  randomToken: function() {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  },\n  //\n\n  isSecure: function() {\n    return location.protocol === \"https:\";\n  }\n};\n\nmodule.exports = util;\n","'use strict';\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  if (!this._events || !this._events[event]) return [];\n  if (this._events[event].fn) return [this._events[event].fn];\n\n  for (var i = 0, l = this._events[event].length, ee = new Array(l); i < l; i++) {\n    ee[i] = this._events[event][i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  if (!this._events || !this._events[event]) return false;\n\n  var listeners = this._events[event]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, once) {\n  if (!this._events || !this._events[event]) return this;\n\n  var listeners = this._events[event]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn && (listeners.fn !== fn || (once && !listeners.once))) {\n      events.push(listeners);\n    }\n    if (!listeners.fn) for (var i = 0, length = listeners.length; i < length; i++) {\n      if (listeners[i].fn !== fn || (once && !listeners[i].once)) {\n        events.push(listeners[i]);\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[event] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[event];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[event];\n  else this._events = {};\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the module.\n//\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.EventEmitter2 = EventEmitter;\nEventEmitter.EventEmitter3 = EventEmitter;\n\n//\n// Expose the module.\n//\nmodule.exports = EventEmitter;\n","var util = require('./util');\nvar EventEmitter = require('eventemitter3');\n\n/**\n * An abstraction on top of WebSockets and XHR streaming to provide fastest\n * possible connection for peers.\n */\nfunction Socket(secure, host, port, path, key, wsport) {\n  if (!(this instanceof Socket)) return new Socket(secure, host, port, path, key, wsport);\n\n  wsport = wsport || port;\n\n  EventEmitter.call(this);\n\n  // Disconnected manually.\n  this.disconnected = false;\n  this._queue = [];\n\n  var httpProtocol = secure ? 'https://' : 'http://';\n  var wsProtocol = secure ? 'wss://' : 'ws://';\n  this._httpUrl = httpProtocol + host + ':' + port + path + key;\n  this._wsUrl = wsProtocol + host + ':' + wsport + path + 'peerjs?key=' + key;\n}\n\nutil.inherits(Socket, EventEmitter);\n\n\n/** Check in with ID or get one from server. */\nSocket.prototype.start = function(id, token) {\n  this.id = id;\n\n  this._httpUrl += '/' + id + '/' + token;\n  this._wsUrl += '&id=' + id + '&token=' + token;\n\n  this._startXhrStream();\n  this._startWebSocket();\n}\n\n\n/** Start up websocket communications. */\nSocket.prototype._startWebSocket = function(id) {\n  var self = this;\n\n  if (this._socket) {\n    return;\n  }\n\n  this._socket = new WebSocket(this._wsUrl);\n\n  this._socket.onmessage = function(event) {\n    try {\n      var data = JSON.parse(event.data);\n    } catch(e) {\n      util.log('Invalid server message', event.data);\n      return;\n    }\n    self.emit('message', data);\n  };\n\n  this._socket.onclose = function(event) {\n    util.log('Socket closed.');\n    self.disconnected = true;\n    self.emit('disconnected');\n  };\n\n  // Take care of the queue of connections if necessary and make sure Peer knows\n  // socket is open.\n  this._socket.onopen = function() {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      setTimeout(function(){\n        self._http.abort();\n        self._http = null;\n      }, 5000);\n    }\n    self._sendQueuedMessages();\n    util.log('Socket open');\n  };\n}\n\n/** Start XHR streaming. */\nSocket.prototype._startXhrStream = function(n) {\n  try {\n    var self = this;\n    this._http = new XMLHttpRequest();\n    this._http._index = 1;\n    this._http._streamIndex = n || 0;\n    this._http.open('post', this._httpUrl + '/id?i=' + this._http._streamIndex, true);\n    this._http.onerror = function() {\n      // If we get an error, likely something went wrong.\n      // Stop streaming.\n      clearTimeout(self._timeout);\n      self.emit('disconnected');\n    }\n    this._http.onreadystatechange = function() {\n      if (this.readyState == 2 && this.old) {\n        this.old.abort();\n        delete this.old;\n      } else if (this.readyState > 2 && this.status === 200 && this.responseText) {\n        self._handleStream(this);\n      }\n    };\n    this._http.send(null);\n    this._setHTTPTimeout();\n  } catch(e) {\n    util.log('XMLHttpRequest not available; defaulting to WebSockets');\n  }\n}\n\n\n/** Handles onreadystatechange response as a stream. */\nSocket.prototype._handleStream = function(http) {\n  // 3 and 4 are loading/done state. All others are not relevant.\n  var messages = http.responseText.split('\\n');\n\n  // Check to see if anything needs to be processed on buffer.\n  if (http._buffer) {\n    while (http._buffer.length > 0) {\n      var index = http._buffer.shift();\n      var bufferedMessage = messages[index];\n      try {\n        bufferedMessage = JSON.parse(bufferedMessage);\n      } catch(e) {\n        http._buffer.shift(index);\n        break;\n      }\n      this.emit('message', bufferedMessage);\n    }\n  }\n\n  var message = messages[http._index];\n  if (message) {\n    http._index += 1;\n    // Buffering--this message is incomplete and we'll get to it next time.\n    // This checks if the httpResponse ended in a `\\n`, in which case the last\n    // element of messages should be the empty string.\n    if (http._index === messages.length) {\n      if (!http._buffer) {\n        http._buffer = [];\n      }\n      http._buffer.push(http._index - 1);\n    } else {\n      try {\n        message = JSON.parse(message);\n      } catch(e) {\n        util.log('Invalid server message', message);\n        return;\n      }\n      this.emit('message', message);\n    }\n  }\n}\n\nSocket.prototype._setHTTPTimeout = function() {\n  var self = this;\n  this._timeout = setTimeout(function() {\n    var old = self._http;\n    if (!self._wsOpen()) {\n      self._startXhrStream(old._streamIndex + 1);\n      self._http.old = old;\n    } else {\n      old.abort();\n    }\n  }, 25000);\n}\n\n/** Is the websocket currently open? */\nSocket.prototype._wsOpen = function() {\n  return this._socket && this._socket.readyState == 1;\n}\n\n/** Send queued messages. */\nSocket.prototype._sendQueuedMessages = function() {\n  for (var i = 0, ii = this._queue.length; i < ii; i += 1) {\n    this.send(this._queue[i]);\n  }\n}\n\n/** Exposed send for DC & Peer. */\nSocket.prototype.send = function(data) {\n  if (this.disconnected) {\n    return;\n  }\n\n  // If we didn't get an ID yet, we can't yet send anything so we should queue\n  // up these messages.\n  if (!this.id) {\n    this._queue.push(data);\n    return;\n  }\n\n  if (!data.type) {\n    this.emit('error', 'Invalid message');\n    return;\n  }\n\n  var message = JSON.stringify(data);\n  if (this._wsOpen()) {\n    this._socket.send(message);\n  } else {\n    var http = new XMLHttpRequest();\n    var url = this._httpUrl + '/' + data.type.toLowerCase();\n    http.open('post', url, true);\n    http.setRequestHeader('Content-Type', 'application/json');\n    http.send(message);\n  }\n}\n\nSocket.prototype.close = function() {\n  if (!this.disconnected && this._wsOpen()) {\n    this._socket.close();\n    this.disconnected = true;\n  }\n}\n\nmodule.exports = Socket;\n","var util = require(\"./util\");\nvar RTCPeerConnection = require(\"./adapter\").RTCPeerConnection;\nvar RTCSessionDescription = require(\"./adapter\").RTCSessionDescription;\nvar RTCIceCandidate = require(\"./adapter\").RTCIceCandidate;\n\n/**\n * Manages all negotiations between Peers.\n */\nvar Negotiator = {\n  pcs: {\n    data: {},\n    media: {}\n  }, // type => {peerId: {pc_id: pc}}.\n  //providers: {}, // provider's id => providers (there may be multiple providers/client.\n  queue: [] // connections that are delayed due to a PC being in use.\n};\n\nNegotiator._idPrefix = \"pc_\";\n\n/** Returns a PeerConnection object set up correctly (for data, media). */\nNegotiator.startConnection = function(connection, options) {\n  var pc = Negotiator._getPeerConnection(connection, options);\n\n  // Set the connection's PC.\n  connection.pc = connection.peerConnection = pc;\n\n  if (connection.type === \"media\" && options._stream) {\n    // Add the stream.\n    pc.addStream(options._stream);\n  }\n\n  // What do we need to do now?\n  if (options.originator) {\n    if (connection.type === \"data\") {\n      // Create the datachannel.\n      var config = {};\n      // Dropping reliable:false support, since it seems to be crashing\n      // Chrome.\n      /*if (util.supports.sctp && !options.reliable) {\n        // If we have canonical reliable support...\n        config = {maxRetransmits: 0};\n      }*/\n      // Fallback to ensure older browsers don't crash.\n      if (!util.supports.sctp) {\n        config = { reliable: options.reliable };\n      }\n      var dc = pc.createDataChannel(connection.label, config);\n      connection.initialize(dc);\n    }\n\n    Negotiator._makeOffer(connection);\n  } else {\n    Negotiator.handleSDP(\"OFFER\", connection, options.sdp);\n  }\n};\n\nNegotiator._getPeerConnection = function(connection, options) {\n  if (!Negotiator.pcs[connection.type]) {\n    util.error(\n      connection.type +\n        \" is not a valid connection type. Maybe you overrode the `type` property somewhere.\"\n    );\n  }\n\n  if (!Negotiator.pcs[connection.type][connection.peer]) {\n    Negotiator.pcs[connection.type][connection.peer] = {};\n  }\n  var peerConnections = Negotiator.pcs[connection.type][connection.peer];\n\n  var pc;\n  // Not multiplexing while FF and Chrome have not-great support for it.\n  /*if (options.multiplex) {\n    ids = Object.keys(peerConnections);\n    for (var i = 0, ii = ids.length; i < ii; i += 1) {\n      pc = peerConnections[ids[i]];\n      if (pc.signalingState === 'stable') {\n        break; // We can go ahead and use this PC.\n      }\n    }\n  } else */\n  if (options.pc) {\n    // Simplest case: PC id already provided for us.\n    pc = Negotiator.pcs[connection.type][connection.peer][options.pc];\n  }\n\n  if (!pc || pc.signalingState !== \"stable\") {\n    pc = Negotiator._startPeerConnection(connection);\n  }\n  return pc;\n};\n\n/*\nNegotiator._addProvider = function(provider) {\n  if ((!provider.id && !provider.disconnected) || !provider.socket.open) {\n    // Wait for provider to obtain an ID.\n    provider.on('open', function(id) {\n      Negotiator._addProvider(provider);\n    });\n  } else {\n    Negotiator.providers[provider.id] = provider;\n  }\n}*/\n\n/** Start a PC. */\nNegotiator._startPeerConnection = function(connection) {\n  util.log(\"Creating RTCPeerConnection.\");\n\n  var id = Negotiator._idPrefix + util.randomToken();\n  var optional = {};\n\n  if (connection.type === \"data\" && !util.supports.sctp) {\n    optional = { optional: [{ RtpDataChannels: true }] };\n  } else if (connection.type === \"media\") {\n    // Interop req for chrome.\n    optional = { optional: [{ DtlsSrtpKeyAgreement: true }] };\n  }\n\n  var pc = new RTCPeerConnection(connection.provider.options.config, optional);\n  Negotiator.pcs[connection.type][connection.peer][id] = pc;\n\n  Negotiator._setupListeners(connection, pc, id);\n\n  return pc;\n};\n\n/** Set up various WebRTC listeners. */\nNegotiator._setupListeners = function(connection, pc, pc_id) {\n  var peerId = connection.peer;\n  var connectionId = connection.id;\n  var provider = connection.provider;\n\n  // ICE CANDIDATES.\n  util.log(\"Listening for ICE candidates.\");\n  pc.onicecandidate = function(evt) {\n    if (evt.candidate) {\n      util.log(\"Received ICE candidates for:\", connection.peer);\n      provider.socket.send({\n        type: \"CANDIDATE\",\n        payload: {\n          candidate: evt.candidate,\n          type: connection.type,\n          connectionId: connection.id\n        },\n        dst: peerId\n      });\n    }\n  };\n\n  pc.oniceconnectionstatechange = function() {\n    switch (pc.iceConnectionState) {\n      case \"failed\":\n        util.log(\n          \"iceConnectionState is disconnected, closing connections to \" + peerId\n        );\n        connection.emit(\n          \"error\",\n          new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n        );\n        connection.close();\n        break;\n      case \"disconnected\":\n        util.log(\n          \"iceConnectionState is disconnected, closing connections to \" + peerId\n        );\n        connection.close();\n        break;\n      case \"completed\":\n        pc.onicecandidate = util.noop;\n        break;\n    }\n  };\n\n  // Fallback for older Chrome impls.\n  pc.onicechange = pc.oniceconnectionstatechange;\n\n  // DATACONNECTION.\n  util.log(\"Listening for data channel\");\n  // Fired between offer and answer, so options should already be saved\n  // in the options hash.\n  pc.ondatachannel = function(evt) {\n    util.log(\"Received data channel\");\n    var dc = evt.channel;\n    var connection = provider.getConnection(peerId, connectionId);\n    connection.initialize(dc);\n  };\n\n  // MEDIACONNECTION.\n  util.log(\"Listening for remote stream\");\n  pc.onaddstream = function(evt) {\n    util.log(\"Received remote stream\");\n    var stream = evt.stream;\n    var connection = provider.getConnection(peerId, connectionId);\n    // 10/10/2014: looks like in Chrome 38, onaddstream is triggered after\n    // setting the remote description. Our connection object in these cases\n    // is actually a DATA connection, so addStream fails.\n    // TODO: This is hopefully just a temporary fix. We should try to\n    // understand why this is happening.\n    if (connection.type === \"media\") {\n      connection.addStream(stream);\n    }\n  };\n};\n\nNegotiator.cleanup = function(connection) {\n  util.log(\"Cleaning up PeerConnection to \" + connection.peer);\n\n  var pc = connection.pc;\n\n  if (\n    !!pc &&\n    ((pc.readyState && pc.readyState !== \"closed\") ||\n      pc.signalingState !== \"closed\")\n  ) {\n    pc.close();\n    connection.pc = null;\n  }\n};\n\nNegotiator._makeOffer = function(connection) {\n  var pc = connection.pc;\n  pc.createOffer(\n    function(offer) {\n      util.log(\"Created offer.\");\n\n      if (\n        !util.supports.sctp &&\n        connection.type === \"data\" &&\n        connection.reliable\n      ) {\n        offer.sdp = Reliable.higherBandwidthSDP(offer.sdp);\n      }\n\n      pc.setLocalDescription(\n        offer,\n        function() {\n          util.log(\"Set localDescription: offer\", \"for:\", connection.peer);\n          connection.provider.socket.send({\n            type: \"OFFER\",\n            payload: {\n              sdp: offer,\n              type: connection.type,\n              label: connection.label,\n              connectionId: connection.id,\n              reliable: connection.reliable,\n              serialization: connection.serialization,\n              metadata: connection.metadata,\n              browser: util.browser\n            },\n            dst: connection.peer\n          });\n        },\n        function(err) {\n          // TODO: investigate why _makeOffer is being called from the answer\n          if (\n            err !=\n            \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n          ) {\n            connection.provider.emitError(\"webrtc\", err);\n            util.log(\"Failed to setLocalDescription, \", err);\n          }\n        }\n      );\n    },\n    function(err) {\n      connection.provider.emitError(\"webrtc\", err);\n      util.log(\"Failed to createOffer, \", err);\n    },\n    connection.options.constraints\n  );\n};\n\nNegotiator._makeAnswer = function(connection) {\n  var pc = connection.pc;\n\n  pc.createAnswer(\n    function(answer) {\n      util.log(\"Created answer.\");\n\n      if (\n        !util.supports.sctp &&\n        connection.type === \"data\" &&\n        connection.reliable\n      ) {\n        answer.sdp = Reliable.higherBandwidthSDP(answer.sdp);\n      }\n\n      pc.setLocalDescription(\n        answer,\n        function() {\n          util.log(\"Set localDescription: answer\", \"for:\", connection.peer);\n          connection.provider.socket.send({\n            type: \"ANSWER\",\n            payload: {\n              sdp: answer,\n              type: connection.type,\n              connectionId: connection.id,\n              browser: util.browser\n            },\n            dst: connection.peer\n          });\n        },\n        function(err) {\n          connection.provider.emitError(\"webrtc\", err);\n          util.log(\"Failed to setLocalDescription, \", err);\n        }\n      );\n    },\n    function(err) {\n      connection.provider.emitError(\"webrtc\", err);\n      util.log(\"Failed to create answer, \", err);\n    }\n  );\n};\n\n/** Handle an SDP. */\nNegotiator.handleSDP = function(type, connection, sdp) {\n  sdp = new RTCSessionDescription(sdp);\n  var pc = connection.pc;\n\n  util.log(\"Setting remote description\", sdp);\n  pc.setRemoteDescription(\n    sdp,\n    function() {\n      util.log(\"Set remoteDescription:\", type, \"for:\", connection.peer);\n\n      if (type === \"OFFER\") {\n        Negotiator._makeAnswer(connection);\n      }\n    },\n    function(err) {\n      connection.provider.emitError(\"webrtc\", err);\n      util.log(\"Failed to setRemoteDescription, \", err);\n    }\n  );\n};\n\n/** Handle a candidate. */\nNegotiator.handleCandidate = function(connection, ice) {\n  var candidate = ice.candidate;\n  var sdpMLineIndex = ice.sdpMLineIndex;\n  connection.pc.addIceCandidate(\n    new RTCIceCandidate({\n      sdpMLineIndex: sdpMLineIndex,\n      candidate: candidate\n    })\n  );\n  util.log(\"Added ICE candidate for:\", connection.peer);\n};\n\nmodule.exports = Negotiator;\n","var util = require('./util');\nvar EventEmitter = require('eventemitter3');\nvar Negotiator = require('./negotiator');\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nfunction MediaConnection(peer, provider, options) {\n  if (!(this instanceof MediaConnection)) return new MediaConnection(peer, provider, options);\n  EventEmitter.call(this);\n\n  this.options = util.extend({}, options);\n\n  this.open = false;\n  this.type = 'media';\n  this.peer = peer;\n  this.provider = provider;\n  this.metadata = this.options.metadata;\n  this.localStream = this.options._stream;\n\n  this.id = this.options.connectionId || MediaConnection._idPrefix + util.randomToken();\n  if (this.localStream) {\n    Negotiator.startConnection(\n      this,\n      {_stream: this.localStream, originator: true}\n    );\n  }\n};\n\nutil.inherits(MediaConnection, EventEmitter);\n\nMediaConnection._idPrefix = 'mc_';\n\nMediaConnection.prototype.addStream = function(remoteStream) {\n  util.log('Receiving stream', remoteStream);\n\n  this.remoteStream = remoteStream;\n  this.emit('stream', remoteStream); // Should we call this `open`?\n\n};\n\nMediaConnection.prototype.handleMessage = function(message) {\n  var payload = message.payload;\n\n  switch (message.type) {\n    case 'ANSWER':\n      // Forward to negotiator\n      Negotiator.handleSDP(message.type, this, payload.sdp);\n      this.open = true;\n      break;\n    case 'CANDIDATE':\n      Negotiator.handleCandidate(this, payload.candidate);\n      break;\n    default:\n      util.warn('Unrecognized message type:', message.type, 'from peer:', this.peer);\n      break;\n  }\n}\n\nMediaConnection.prototype.answer = function(stream) {\n  if (this.localStream) {\n    util.warn('Local stream already exists on this MediaConnection. Are you answering a call twice?');\n    return;\n  }\n\n  this.options._payload._stream = stream;\n\n  this.localStream = stream;\n  Negotiator.startConnection(\n    this,\n    this.options._payload\n  )\n  // Retrieve lost messages stored because PeerConnection not set up.\n  var messages = this.provider._getMessages(this.id);\n  for (var i = 0, ii = messages.length; i < ii; i += 1) {\n    this.handleMessage(messages[i]);\n  }\n  this.open = true;\n};\n\n/**\n * Exposed functionality for users.\n */\n\n/** Allows user to close connection. */\nMediaConnection.prototype.close = function() {\n  if (!this.open) {\n    return;\n  }\n  this.open = false;\n  Negotiator.cleanup(this);\n  this.emit('close')\n};\n\nmodule.exports = MediaConnection;\n","var BinaryPack = require('js-binarypack');\n\nvar util = {\n  debug: false,\n  \n  inherits: function(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  },\n  extend: function(dest, source) {\n    for(var key in source) {\n      if(source.hasOwnProperty(key)) {\n        dest[key] = source[key];\n      }\n    }\n    return dest;\n  },\n  pack: BinaryPack.pack,\n  unpack: BinaryPack.unpack,\n  \n  log: function () {\n    if (util.debug) {\n      var copy = [];\n      for (var i = 0; i < arguments.length; i++) {\n        copy[i] = arguments[i];\n      }\n      copy.unshift('Reliable: ');\n      console.log.apply(console, copy);\n    }\n  },\n\n  setZeroTimeout: (function(global) {\n    var timeouts = [];\n    var messageName = 'zero-timeout-message';\n\n    // Like setTimeout, but only takes a function argument.\t There's\n    // no time argument (always zero) and no arguments (you have to\n    // use a closure).\n    function setZeroTimeoutPostMessage(fn) {\n      timeouts.push(fn);\n      global.postMessage(messageName, '*');\n    }\t\t\n\n    function handleMessage(event) {\n      if (event.source == global && event.data == messageName) {\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n        if (timeouts.length) {\n          timeouts.shift()();\n        }\n      }\n    }\n    if (global.addEventListener) {\n      global.addEventListener('message', handleMessage, true);\n    } else if (global.attachEvent) {\n      global.attachEvent('onmessage', handleMessage);\n    }\n    return setZeroTimeoutPostMessage;\n  }(this)),\n  \n  blobToArrayBuffer: function(blob, cb){\n    var fr = new FileReader();\n    fr.onload = function(evt) {\n      cb(evt.target.result);\n    };\n    fr.readAsArrayBuffer(blob);\n  },\n  blobToBinaryString: function(blob, cb){\n    var fr = new FileReader();\n    fr.onload = function(evt) {\n      cb(evt.target.result);\n    };\n    fr.readAsBinaryString(blob);\n  },\n  binaryStringToArrayBuffer: function(binary) {\n    var byteArray = new Uint8Array(binary.length);\n    for (var i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n    return byteArray.buffer;\n  },\n  randomToken: function () {\n    return Math.random().toString(36).substr(2);\n  }\n};\n\nmodule.exports = util;\n","var util = require('./util');\n\n/**\n * Reliable transfer for Chrome Canary DataChannel impl.\n * Author: @michellebu\n */\nfunction Reliable(dc, debug) {\n  if (!(this instanceof Reliable)) return new Reliable(dc);\n  this._dc = dc;\n\n  util.debug = debug;\n\n  // Messages sent/received so far.\n  // id: { ack: n, chunks: [...] }\n  this._outgoing = {};\n  // id: { ack: ['ack', id, n], chunks: [...] }\n  this._incoming = {};\n  this._received = {};\n\n  // Window size.\n  this._window = 1000;\n  // MTU.\n  this._mtu = 500;\n  // Interval for setInterval. In ms.\n  this._interval = 0;\n\n  // Messages sent.\n  this._count = 0;\n\n  // Outgoing message queue.\n  this._queue = [];\n\n  this._setupDC();\n};\n\n// Send a message reliably.\nReliable.prototype.send = function(msg) {\n  // Determine if chunking is necessary.\n  var bl = util.pack(msg);\n  if (bl.size < this._mtu) {\n    this._handleSend(['no', bl]);\n    return;\n  }\n\n  this._outgoing[this._count] = {\n    ack: 0,\n    chunks: this._chunk(bl)\n  };\n\n  if (util.debug) {\n    this._outgoing[this._count].timer = new Date();\n  }\n\n  // Send prelim window.\n  this._sendWindowedChunks(this._count);\n  this._count += 1;\n};\n\n// Set up interval for processing queue.\nReliable.prototype._setupInterval = function() {\n  // TODO: fail gracefully.\n\n  var self = this;\n  this._timeout = setInterval(function() {\n    // FIXME: String stuff makes things terribly async.\n    var msg = self._queue.shift();\n    if (msg._multiple) {\n      for (var i = 0, ii = msg.length; i < ii; i += 1) {\n        self._intervalSend(msg[i]);\n      }\n    } else {\n      self._intervalSend(msg);\n    }\n  }, this._interval);\n};\n\nReliable.prototype._intervalSend = function(msg) {\n  var self = this;\n  msg = util.pack(msg);\n  util.blobToBinaryString(msg, function(str) {\n    self._dc.send(str);\n  });\n  if (self._queue.length === 0) {\n    clearTimeout(self._timeout);\n    self._timeout = null;\n    //self._processAcks();\n  }\n};\n\n// Go through ACKs to send missing pieces.\nReliable.prototype._processAcks = function() {\n  for (var id in this._outgoing) {\n    if (this._outgoing.hasOwnProperty(id)) {\n      this._sendWindowedChunks(id);\n    }\n  }\n};\n\n// Handle sending a message.\n// FIXME: Don't wait for interval time for all messages...\nReliable.prototype._handleSend = function(msg) {\n  var push = true;\n  for (var i = 0, ii = this._queue.length; i < ii; i += 1) {\n    var item = this._queue[i];\n    if (item === msg) {\n      push = false;\n    } else if (item._multiple && item.indexOf(msg) !== -1) {\n      push = false;\n    }\n  }\n  if (push) {\n    this._queue.push(msg);\n    if (!this._timeout) {\n      this._setupInterval();\n    }\n  }\n};\n\n// Set up DataChannel handlers.\nReliable.prototype._setupDC = function() {\n  // Handle various message types.\n  var self = this;\n  this._dc.onmessage = function(e) {\n    var msg = e.data;\n    var datatype = msg.constructor;\n    // FIXME: msg is String until binary is supported.\n    // Once that happens, this will have to be smarter.\n    if (datatype === String) {\n      var ab = util.binaryStringToArrayBuffer(msg);\n      msg = util.unpack(ab);\n      self._handleMessage(msg);\n    }\n  };\n};\n\n// Handles an incoming message.\nReliable.prototype._handleMessage = function(msg) {\n  var id = msg[1];\n  var idata = this._incoming[id];\n  var odata = this._outgoing[id];\n  var data;\n  switch (msg[0]) {\n    // No chunking was done.\n    case 'no':\n      var message = id;\n      if (!!message) {\n        this.onmessage(util.unpack(message));\n      }\n      break;\n    // Reached the end of the message.\n    case 'end':\n      data = idata;\n\n      // In case end comes first.\n      this._received[id] = msg[2];\n\n      if (!data) {\n        break;\n      }\n\n      this._ack(id);\n      break;\n    case 'ack':\n      data = odata;\n      if (!!data) {\n        var ack = msg[2];\n        // Take the larger ACK, for out of order messages.\n        data.ack = Math.max(ack, data.ack);\n\n        // Clean up when all chunks are ACKed.\n        if (data.ack >= data.chunks.length) {\n          util.log('Time: ', new Date() - data.timer);\n          delete this._outgoing[id];\n        } else {\n          this._processAcks();\n        }\n      }\n      // If !data, just ignore.\n      break;\n    // Received a chunk of data.\n    case 'chunk':\n      // Create a new entry if none exists.\n      data = idata;\n      if (!data) {\n        var end = this._received[id];\n        if (end === true) {\n          break;\n        }\n        data = {\n          ack: ['ack', id, 0],\n          chunks: []\n        };\n        this._incoming[id] = data;\n      }\n\n      var n = msg[2];\n      var chunk = msg[3];\n      data.chunks[n] = new Uint8Array(chunk);\n\n      // If we get the chunk we're looking for, ACK for next missing.\n      // Otherwise, ACK the same N again.\n      if (n === data.ack[2]) {\n        this._calculateNextAck(id);\n      }\n      this._ack(id);\n      break;\n    default:\n      // Shouldn't happen, but would make sense for message to just go\n      // through as is.\n      this._handleSend(msg);\n      break;\n  }\n};\n\n// Chunks BL into smaller messages.\nReliable.prototype._chunk = function(bl) {\n  var chunks = [];\n  var size = bl.size;\n  var start = 0;\n  while (start < size) {\n    var end = Math.min(size, start + this._mtu);\n    var b = bl.slice(start, end);\n    var chunk = {\n      payload: b\n    }\n    chunks.push(chunk);\n    start = end;\n  }\n  util.log('Created', chunks.length, 'chunks.');\n  return chunks;\n};\n\n// Sends ACK N, expecting Nth blob chunk for message ID.\nReliable.prototype._ack = function(id) {\n  var ack = this._incoming[id].ack;\n\n  // if ack is the end value, then call _complete.\n  if (this._received[id] === ack[2]) {\n    this._complete(id);\n    this._received[id] = true;\n  }\n\n  this._handleSend(ack);\n};\n\n// Calculates the next ACK number, given chunks.\nReliable.prototype._calculateNextAck = function(id) {\n  var data = this._incoming[id];\n  var chunks = data.chunks;\n  for (var i = 0, ii = chunks.length; i < ii; i += 1) {\n    // This chunk is missing!!! Better ACK for it.\n    if (chunks[i] === undefined) {\n      data.ack[2] = i;\n      return;\n    }\n  }\n  data.ack[2] = chunks.length;\n};\n\n// Sends the next window of chunks.\nReliable.prototype._sendWindowedChunks = function(id) {\n  util.log('sendWindowedChunks for: ', id);\n  var data = this._outgoing[id];\n  var ch = data.chunks;\n  var chunks = [];\n  var limit = Math.min(data.ack + this._window, ch.length);\n  for (var i = data.ack; i < limit; i += 1) {\n    if (!ch[i].sent || i === data.ack) {\n      ch[i].sent = true;\n      chunks.push(['chunk', id, i, ch[i].payload]);\n    }\n  }\n  if (data.ack + this._window >= ch.length) {\n    chunks.push(['end', id, ch.length])\n  }\n  chunks._multiple = true;\n  this._handleSend(chunks);\n};\n\n// Puts together a message from chunks.\nReliable.prototype._complete = function(id) {\n  util.log('Completed called for', id);\n  var self = this;\n  var chunks = this._incoming[id].chunks;\n  var bl = new Blob(chunks);\n  util.blobToArrayBuffer(bl, function(ab) {\n    self.onmessage(util.unpack(ab));\n  });\n  delete this._incoming[id];\n};\n\n// Ups bandwidth limit on SDP. Meant to be called during offer/answer.\nReliable.higherBandwidthSDP = function(sdp) {\n  // AS stands for Application-Specific Maximum.\n  // Bandwidth number is in kilobits / sec.\n  // See RFC for more info: http://www.ietf.org/rfc/rfc2327.txt\n\n  // Chrome 31+ doesn't want us munging the SDP, so we'll let them have their\n  // way.\n  var version = navigator.appVersion.match(/Chrome\\/(.*?) /);\n  if (version) {\n    version = parseInt(version[1].split('.').shift());\n    if (version < 31) {\n      var parts = sdp.split('b=AS:30');\n      var replace = 'b=AS:102400'; // 100 Mbps\n      if (parts.length > 1) {\n        return parts[0] + replace + parts[1];\n      }\n    }\n  }\n\n  return sdp;\n};\n\n// Overwritten, typically.\nReliable.prototype.onmessage = function(msg) {};\n\nmodule.exports.Reliable = Reliable;\n","var util = require('./util');\nvar EventEmitter = require('eventemitter3');\nvar Negotiator = require('./negotiator');\nvar Reliable = require('reliable');\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nfunction DataConnection(peer, provider, options) {\n  if (!(this instanceof DataConnection)) return new DataConnection(peer, provider, options);\n  EventEmitter.call(this);\n\n  this.options = util.extend({\n    serialization: 'binary',\n    reliable: false\n  }, options);\n\n  // Connection is not open yet.\n  this.open = false;\n  this.type = 'data';\n  this.peer = peer;\n  this.provider = provider;\n\n  this.id = this.options.connectionId || DataConnection._idPrefix + util.randomToken();\n\n  this.label = this.options.label || this.id;\n  this.metadata = this.options.metadata;\n  this.serialization = this.options.serialization;\n  this.reliable = this.options.reliable;\n\n  // Data channel buffering.\n  this._buffer = [];\n  this._buffering = false;\n  this.bufferSize = 0;\n\n  // For storing large data.\n  this._chunkedData = {};\n\n  if (this.options._payload) {\n    this._peerBrowser = this.options._payload.browser;\n  }\n\n  Negotiator.startConnection(\n    this,\n    this.options._payload || {\n      originator: true\n    }\n  );\n}\n\nutil.inherits(DataConnection, EventEmitter);\n\nDataConnection._idPrefix = 'dc_';\n\n/** Called by the Negotiator when the DataChannel is ready. */\nDataConnection.prototype.initialize = function(dc) {\n  this._dc = this.dataChannel = dc;\n  this._configureDataChannel();\n}\n\nDataConnection.prototype._configureDataChannel = function() {\n  var self = this;\n  if (util.supports.sctp) {\n    this._dc.binaryType = 'arraybuffer';\n  }\n  this._dc.onopen = function() {\n    util.log('Data channel connection success');\n    self.open = true;\n    self.emit('open');\n  }\n\n  // Use the Reliable shim for non Firefox browsers\n  if (!util.supports.sctp && this.reliable) {\n    this._reliable = new Reliable(this._dc, util.debug);\n  }\n\n  if (this._reliable) {\n    this._reliable.onmessage = function(msg) {\n      self.emit('data', msg);\n    };\n  } else {\n    this._dc.onmessage = function(e) {\n      self._handleDataMessage(e);\n    };\n  }\n  this._dc.onclose = function(e) {\n    util.log('DataChannel closed for:', self.peer);\n    self.close();\n  };\n}\n\n// Handles a DataChannel message.\nDataConnection.prototype._handleDataMessage = function(e) {\n  var self = this;\n  var data = e.data;\n  var datatype = data.constructor;\n  if (this.serialization === 'binary' || this.serialization === 'binary-utf8') {\n    if (datatype === Blob) {\n      // Datatype should never be blob\n      util.blobToArrayBuffer(data, function(ab) {\n        data = util.unpack(ab);\n        self.emit('data', data);\n      });\n      return;\n    } else if (datatype === ArrayBuffer) {\n      data = util.unpack(data);\n    } else if (datatype === String) {\n      // String fallback for binary data for browsers that don't support binary yet\n      var ab = util.binaryStringToArrayBuffer(data);\n      data = util.unpack(ab);\n    }\n  } else if (this.serialization === 'json') {\n    data = JSON.parse(data);\n  }\n\n  // Check if we've chunked--if so, piece things back together.\n  // We're guaranteed that this isn't 0.\n  if (data.__peerData) {\n    var id = data.__peerData;\n    var chunkInfo = this._chunkedData[id] || {data: [], count: 0, total: data.total};\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count += 1;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      data = new Blob(chunkInfo.data);\n      this._handleDataMessage({data: data});\n    }\n\n    this._chunkedData[id] = chunkInfo;\n    return;\n  }\n\n  this.emit('data', data);\n}\n\n/**\n * Exposed functionality for users.\n */\n\n/** Allows user to close connection. */\nDataConnection.prototype.close = function() {\n  if (!this.open) {\n    return;\n  }\n  this.open = false;\n  Negotiator.cleanup(this);\n  this.emit('close');\n}\n\n/** Allows user to send data. */\nDataConnection.prototype.send = function(data, chunked) {\n  if (!this.open) {\n    this.emit('error', new Error('Connection is not open. You should listen for the `open` event before sending messages.'));\n    return;\n  }\n  if (this._reliable) {\n    // Note: reliable shim sending will make it so that you cannot customize\n    // serialization.\n    this._reliable.send(data);\n    return;\n  }\n  var self = this;\n  if (this.serialization === 'json') {\n    this._bufferedSend(JSON.stringify(data));\n  } else if (this.serialization === 'binary' || this.serialization === 'binary-utf8') {\n    var blob = util.pack(data);\n\n    // For Chrome-Firefox interoperability, we need to make Firefox \"chunk\"\n    // the data it sends out.\n    var needsChunking = util.chunkedBrowsers[this._peerBrowser] || util.chunkedBrowsers[util.browser];\n    if (needsChunking && !chunked && blob.size > util.chunkedMTU) {\n      this._sendChunks(blob);\n      return;\n    }\n\n    // DataChannel currently only supports strings.\n    if (!util.supports.sctp) {\n      util.blobToBinaryString(blob, function(str) {\n        self._bufferedSend(str);\n      });\n    } else if (!util.supports.binaryBlob) {\n      // We only do this if we really need to (e.g. blobs are not supported),\n      // because this conversion is costly.\n      util.blobToArrayBuffer(blob, function(ab) {\n        self._bufferedSend(ab);\n      });\n    } else {\n      this._bufferedSend(blob);\n    }\n  } else {\n    this._bufferedSend(data);\n  }\n}\n\nDataConnection.prototype._bufferedSend = function(msg) {\n  if (this._buffering || !this._trySend(msg)) {\n    this._buffer.push(msg);\n    this.bufferSize = this._buffer.length;\n  }\n}\n\n// Returns true if the send succeeds.\nDataConnection.prototype._trySend = function(msg) {\n  try {\n    this._dc.send(msg);\n  } catch (e) {\n    this._buffering = true;\n\n    var self = this;\n    setTimeout(function() {\n      // Try again.\n      self._buffering = false;\n      self._tryBuffer();\n    }, 100);\n    return false;\n  }\n  return true;\n}\n\n// Try to send the first message in the buffer.\nDataConnection.prototype._tryBuffer = function() {\n  if (this._buffer.length === 0) {\n    return;\n  }\n\n  var msg = this._buffer[0];\n\n  if (this._trySend(msg)) {\n    this._buffer.shift();\n    this.bufferSize = this._buffer.length;\n    this._tryBuffer();\n  }\n}\n\nDataConnection.prototype._sendChunks = function(blob) {\n  var blobs = util.chunk(blob);\n  for (var i = 0, ii = blobs.length; i < ii; i += 1) {\n    var blob = blobs[i];\n    this.send(blob, true);\n  }\n}\n\nDataConnection.prototype.handleMessage = function(message) {\n  var payload = message.payload;\n\n  switch (message.type) {\n    case 'ANSWER':\n      this._peerBrowser = payload.browser;\n\n      // Forward to negotiator\n      Negotiator.handleSDP(message.type, this, payload.sdp);\n      break;\n    case 'CANDIDATE':\n      Negotiator.handleCandidate(this, payload.candidate);\n      break;\n    default:\n      util.warn('Unrecognized message type:', message.type, 'from peer:', this.peer);\n      break;\n  }\n}\n\nmodule.exports = DataConnection;\n","var util = require(\"./util\");\nvar EventEmitter = require(\"eventemitter3\");\nvar Socket = require(\"./socket\");\nvar MediaConnection = require(\"./mediaconnection\");\nvar DataConnection = require(\"./dataconnection\");\n\n/**\n * A peer who can initiate connections with other peers.\n */\nfunction Peer(id, options) {\n  if (!(this instanceof Peer)) return new Peer(id, options);\n  EventEmitter.call(this);\n\n  // Deal with overloading\n  if (id && id.constructor == Object) {\n    options = id;\n    id = undefined;\n  } else if (id) {\n    // Ensure id is a string\n    id = id.toString();\n  }\n  //\n\n  // Configurize options\n  options = util.extend(\n    {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      token: util.randomToken(),\n      config: util.defaultConfig\n    },\n    options\n  );\n  options.key = \"peerjs\";\n  this.options = options;\n  // Detect relative URL host.\n  if (options.host === \"/\") {\n    options.host = window.location.hostname;\n  }\n  // Set path correctly.\n  if (options.path[0] !== \"/\") {\n    options.path = \"/\" + options.path;\n  }\n  if (options.path[options.path.length - 1] !== \"/\") {\n    options.path += \"/\";\n  }\n\n  // Set whether we use SSL to same as current host\n  if (options.secure === undefined && options.host !== util.CLOUD_HOST) {\n    options.secure = util.isSecure();\n  }\n  // Set a custom log function if present\n  if (options.logFunction) {\n    util.setLogFunction(options.logFunction);\n  }\n  util.setLogLevel(options.debug);\n  //\n\n  // Sanity checks\n  // Ensure WebRTC supported\n  if (!util.supports.audioVideo && !util.supports.data) {\n    this._delayedAbort(\n      \"browser-incompatible\",\n      \"The current browser does not support WebRTC\"\n    );\n    return;\n  }\n  // Ensure alphanumeric id\n  if (!util.validateId(id)) {\n    this._delayedAbort(\"invalid-id\", 'ID \"' + id + '\" is invalid');\n    return;\n  }\n  // Ensure valid key\n  // if (!util.validateKey(options.key)) {\n  //   this._delayedAbort(\n  //     \"invalid-key\",\n  //     'API KEY \"' + options.key + '\" is invalid'\n  //   );\n  //   return;\n  // }\n  // Ensure not using unsecure cloud server on SSL page\n  // if (options.secure && options.host === \"0.peerjs.com\") {\n  //   this._delayedAbort(\n  //     \"ssl-unavailable\",\n  //     \"The cloud server currently does not support HTTPS. Please run your own PeerServer to use HTTPS.\"\n  //   );\n  //   return;\n  // }\n  //\n\n  // States.\n  this.destroyed = false; // Connections have been killed\n  this.disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  this.open = false; // Sockets and such are not yet open.\n  //\n\n  // References\n  this.connections = {}; // DataConnections for this peer.\n  this._lostMessages = {}; // src => [list of messages]\n  //\n\n  // Start the server connection\n  this._initializeServerConnection();\n  if (id) {\n    this._initialize(id);\n  } else {\n    this._retrieveId();\n  }\n  //\n}\n\nutil.inherits(Peer, EventEmitter);\n\n// Initialize the 'socket' (which is actually a mix of XHR streaming and\n// websockets.)\nPeer.prototype._initializeServerConnection = function() {\n  var self = this;\n  this.socket = new Socket(\n    this.options.secure,\n    this.options.host,\n    this.options.port,\n    this.options.path,\n    this.options.key,\n    this.options.wsport\n  );\n  this.socket.on(\"message\", function(data) {\n    self._handleMessage(data);\n  });\n  this.socket.on(\"error\", function(error) {\n    self._abort(\"socket-error\", error);\n  });\n  this.socket.on(\"disconnected\", function() {\n    // If we haven't explicitly disconnected, emit error and disconnect.\n    if (!self.disconnected) {\n      self.emitError(\"network\", \"Lost connection to server.\");\n      self.disconnect();\n    }\n  });\n  this.socket.on(\"close\", function() {\n    // If we haven't explicitly disconnected, emit error.\n    if (!self.disconnected) {\n      self._abort(\"socket-closed\", \"Underlying socket is already closed.\");\n    }\n  });\n};\n\n/** Get a unique ID from the server via XHR. */\nPeer.prototype._retrieveId = function(cb) {\n  var self = this;\n  var http = new XMLHttpRequest();\n  var protocol = this.options.secure ? \"https://\" : \"http://\";\n  var url =\n    protocol +\n    this.options.host +\n    \":\" +\n    this.options.port +\n    this.options.path +\n    this.options.key +\n    \"/id\";\n  var queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n  url += queryString;\n\n  // If there's no ID we need to wait for one before trying to init socket.\n  http.open(\"get\", url, true);\n  http.onerror = function(e) {\n    util.error(\"Error retrieving ID\", e);\n    var pathError = \"\";\n    if (self.options.path === \"/\" && self.options.host !== util.CLOUD_HOST) {\n      pathError =\n        \" If you passed in a `path` to your self-hosted PeerServer, \" +\n        \"you'll also need to pass in that same path when creating a new \" +\n        \"Peer.\";\n    }\n    self._abort(\n      \"server-error\",\n      \"Could not get an ID from the server.\" + pathError\n    );\n  };\n  http.onreadystatechange = function() {\n    if (http.readyState !== 4) {\n      return;\n    }\n    if (http.status !== 200) {\n      http.onerror();\n      return;\n    }\n    self._initialize(http.responseText);\n  };\n  http.send(null);\n};\n\n/** Initialize a connection with the server. */\nPeer.prototype._initialize = function(id) {\n  this.id = id;\n  this.socket.start(this.id, this.options.token);\n};\n\n/** Handles messages from the server. */\nPeer.prototype._handleMessage = function(message) {\n  var type = message.type;\n  var payload = message.payload;\n  var peer = message.src;\n  var connection;\n\n  switch (type) {\n    case \"OPEN\": // The connection to the server is open.\n      this.emit(\"open\", this.id);\n      this.open = true;\n      break;\n    case \"ERROR\": // Server error.\n      this._abort(\"server-error\", payload.msg);\n      break;\n    case \"ID-TAKEN\": // The selected ID is taken.\n      this._abort(\"unavailable-id\", \"ID `\" + this.id + \"` is taken\");\n      break;\n    case \"INVALID-KEY\": // The given API key cannot be found.\n      this._abort(\n        \"invalid-key\",\n        'API KEY \"' + this.options.key + '\" is invalid'\n      );\n      break;\n\n    //\n    case \"LEAVE\": // Another peer has closed its connection to this peer.\n      util.log(\"Received leave message from\", peer);\n      this._cleanupPeer(peer);\n      break;\n\n    case \"EXPIRE\": // The offer sent to a peer has expired without response.\n      this.emitError(\"peer-unavailable\", \"Could not connect to peer \" + peer);\n      break;\n    case \"OFFER\": // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n      var connectionId = payload.connectionId;\n      connection = this.getConnection(peer, connectionId);\n\n      if (connection) {\n        connection.close();\n        util.warn(\"Offer received for existing Connection ID:\", connectionId);\n      }\n\n      // Create a new connection.\n      if (payload.type === \"media\") {\n        connection = new MediaConnection(peer, this, {\n          connectionId: connectionId,\n          _payload: payload,\n          metadata: payload.metadata\n        });\n        this._addConnection(peer, connection);\n        this.emit(\"call\", connection);\n      } else if (payload.type === \"data\") {\n        connection = new DataConnection(peer, this, {\n          connectionId: connectionId,\n          _payload: payload,\n          metadata: payload.metadata,\n          label: payload.label,\n          serialization: payload.serialization,\n          reliable: payload.reliable\n        });\n        this._addConnection(peer, connection);\n        this.emit(\"connection\", connection);\n      } else {\n        util.warn(\"Received malformed connection type:\", payload.type);\n        return;\n      }\n      // Find messages.\n      var messages = this._getMessages(connectionId);\n      for (var i = 0, ii = messages.length; i < ii; i += 1) {\n        connection.handleMessage(messages[i]);\n      }\n\n      break;\n    default:\n      if (!payload) {\n        util.warn(\n          \"You received a malformed message from \" + peer + \" of type \" + type\n        );\n        return;\n      }\n\n      var id = payload.connectionId;\n      connection = this.getConnection(peer, id);\n\n      if (connection && connection.pc) {\n        // Pass it on.\n        connection.handleMessage(message);\n      } else if (id) {\n        // Store for possible later use\n        this._storeMessage(id, message);\n      } else {\n        util.warn(\"You received an unrecognized message:\", message);\n      }\n      break;\n  }\n};\n\n/** Stores messages without a set up connection, to be claimed later. */\nPeer.prototype._storeMessage = function(connectionId, message) {\n  if (!this._lostMessages[connectionId]) {\n    this._lostMessages[connectionId] = [];\n  }\n  this._lostMessages[connectionId].push(message);\n};\n\n/** Retrieve messages from lost message store */\nPeer.prototype._getMessages = function(connectionId) {\n  var messages = this._lostMessages[connectionId];\n  if (messages) {\n    delete this._lostMessages[connectionId];\n    return messages;\n  } else {\n    return [];\n  }\n};\n\n/**\n * Returns a DataConnection to the specified peer. See documentation for a\n * complete list of options.\n */\nPeer.prototype.connect = function(peer, options) {\n  if (this.disconnected) {\n    util.warn(\n      \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n    );\n    this.emitError(\n      \"disconnected\",\n      \"Cannot connect to new Peer after disconnecting from server.\"\n    );\n    return;\n  }\n  var connection = new DataConnection(peer, this, options);\n  this._addConnection(peer, connection);\n  return connection;\n};\n\n/**\n * Returns a MediaConnection to the specified peer. See documentation for a\n * complete list of options.\n */\nPeer.prototype.call = function(peer, stream, options) {\n  if (this.disconnected) {\n    util.warn(\n      \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n    );\n    this.emitError(\n      \"disconnected\",\n      \"Cannot connect to new Peer after disconnecting from server.\"\n    );\n    return;\n  }\n  if (!stream) {\n    util.error(\n      \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n    );\n    return;\n  }\n  options = options || {};\n  options._stream = stream;\n  var call = new MediaConnection(peer, this, options);\n  this._addConnection(peer, call);\n  return call;\n};\n\n/** Add a data/media connection to this peer. */\nPeer.prototype._addConnection = function(peer, connection) {\n  if (!this.connections[peer]) {\n    this.connections[peer] = [];\n  }\n  this.connections[peer].push(connection);\n};\n\n/** Retrieve a data/media connection for this peer. */\nPeer.prototype.getConnection = function(peer, id) {\n  var connections = this.connections[peer];\n  if (!connections) {\n    return null;\n  }\n  for (var i = 0, ii = connections.length; i < ii; i++) {\n    if (connections[i].id === id) {\n      return connections[i];\n    }\n  }\n  return null;\n};\n\nPeer.prototype._delayedAbort = function(type, message) {\n  var self = this;\n  util.setZeroTimeout(function() {\n    self._abort(type, message);\n  });\n};\n\n/**\n * Destroys the Peer and emits an error message.\n * The Peer is not destroyed if it's in a disconnected state, in which case\n * it retains its disconnected state and its existing connections.\n */\nPeer.prototype._abort = function(type, message) {\n  util.error(\"Aborting!\");\n  if (!this._lastServerId) {\n    this.destroy();\n  } else {\n    this.disconnect();\n  }\n  this.emitError(type, message);\n};\n\n/** Emits a typed error message. */\nPeer.prototype.emitError = function(type, err) {\n  util.error(\"Error:\", err);\n  if (typeof err === \"string\") {\n    err = new Error(err);\n  }\n  err.type = type;\n  this.emit(\"error\", err);\n};\n\n/**\n * Destroys the Peer: closes all active connections as well as the connection\n *  to the server.\n * Warning: The peer can no longer create or accept connections after being\n *  destroyed.\n */\nPeer.prototype.destroy = function() {\n  if (!this.destroyed) {\n    this._cleanup();\n    this.disconnect();\n    this.destroyed = true;\n  }\n};\n\n/** Disconnects every connection on this peer. */\nPeer.prototype._cleanup = function() {\n  if (this.connections) {\n    var peers = Object.keys(this.connections);\n    for (var i = 0, ii = peers.length; i < ii; i++) {\n      this._cleanupPeer(peers[i]);\n    }\n  }\n  this.emit(\"close\");\n};\n\n/** Closes all connections to this peer. */\nPeer.prototype._cleanupPeer = function(peer) {\n  var connections = this.connections[peer];\n  for (var j = 0, jj = connections.length; j < jj; j += 1) {\n    connections[j].close();\n  }\n};\n\n/**\n * Disconnects the Peer's connection to the PeerServer. Does not close any\n *  active connections.\n * Warning: The peer can no longer create or accept connections after being\n *  disconnected. It also cannot reconnect to the server.\n */\nPeer.prototype.disconnect = function() {\n  var self = this;\n  util.setZeroTimeout(function() {\n    if (!self.disconnected) {\n      self.disconnected = true;\n      self.open = false;\n      if (self.socket) {\n        self.socket.close();\n      }\n      self.emit(\"disconnected\", self.id);\n      self._lastServerId = self.id;\n      self.id = null;\n    }\n  });\n};\n\n/** Attempts to reconnect with the same ID. */\nPeer.prototype.reconnect = function() {\n  if (this.disconnected && !this.destroyed) {\n    util.log(\"Attempting reconnection to server with ID \" + this._lastServerId);\n    this.disconnected = false;\n    this._initializeServerConnection();\n    this._initialize(this._lastServerId);\n  } else if (this.destroyed) {\n    throw new Error(\n      \"This peer cannot reconnect to the server. It has already been destroyed.\"\n    );\n  } else if (!this.disconnected && !this.open) {\n    // Do nothing. We're still connecting the first time.\n    util.error(\n      \"In a hurry? We're still trying to make the initial connection!\"\n    );\n  } else {\n    throw new Error(\n      \"Peer \" +\n        this.id +\n        \" cannot reconnect because it is not disconnected from the server!\"\n    );\n  }\n};\n\n/**\n * Get a list of available peer IDs. If you're running your own server, you'll\n * want to set allow_discovery: true in the PeerServer options. If you're using\n * the cloud server, email team@peerjs.com to get the functionality enabled for\n * your key.\n */\nPeer.prototype.listAllPeers = function(cb) {\n  cb = cb || function() {};\n  var self = this;\n  var http = new XMLHttpRequest();\n  var protocol = this.options.secure ? \"https://\" : \"http://\";\n  var url =\n    protocol +\n    this.options.host +\n    \":\" +\n    this.options.port +\n    this.options.path +\n    this.options.key +\n    \"/peers\";\n  var queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n  url += queryString;\n\n  // If there's no ID we need to wait for one before trying to init socket.\n  http.open(\"get\", url, true);\n  http.onerror = function(e) {\n    self._abort(\"server-error\", \"Could not get peers from the server.\");\n    cb([]);\n  };\n  http.onreadystatechange = function() {\n    if (http.readyState !== 4) {\n      return;\n    }\n    if (http.status === 401) {\n      var helpfulError = \"\";\n      if (self.options.host !== util.CLOUD_HOST) {\n        helpfulError =\n          \"It looks like you're using the cloud server. You can email \" +\n          \"team@peerjs.com to enable peer listing for your API key.\";\n      } else {\n        helpfulError =\n          \"You need to enable `allow_discovery` on your self-hosted \" +\n          \"PeerServer to use this feature.\";\n      }\n      cb([]);\n      throw new Error(\n        \"It doesn't look like you have permission to list peers IDs. \" +\n          helpfulError\n      );\n    } else if (http.status !== 200) {\n      cb([]);\n    } else {\n      cb(JSON.parse(http.responseText));\n    }\n  };\n  http.send(null);\n};\n\nmodule.exports = Peer;\n","import {throttle, getElementSize} from './helpers'\nimport Tetris from './tetris'\nimport Drawable from './drawable'\nimport Peer from 'peerjs'\n\nfunction HTMLTetrisGame (parent, options) {\n  this.initialize = function () {\n    this.options = {\n      playable: false,\n      half: false\n    }\n    Object.assign(this.options, options)\n    this.sendGroundLoopInterval = null\n    this.parent = parent\n    this.createHtmlElements(parent)\n    this.createDrawables()\n    this.createTetrisGame()\n    this.attachWindowEvents()\n    if (this.options.playable) {\n      this.startPieceMoveDownLoop()\n      this.startDrawLoop()\n    }\n    this.handleResize()\n    setTimeout(() => {\n      this.handleResize()\n    }, 1000)\n  }\n\n  this.addReplica = function (conn) {\n    let replica = new HTMLTetrisGame(\n      this.parent,\n      {\n        playable: false,\n        half: true\n      }\n    )\n    // someone connected to us\n    this.sendGroundLoop(conn)\n    conn.on('data', (data) => {\n      replica.tetris.loadSerializedData(data)\n    })\n    conn.on('close', () => {\n      replica.destroy()\n    })\n    replica.handleResize()\n  }\n\n  this.destroy = function () {\n    this.parent.removeChild(this.element)\n  }\n\n  this.attachWindowEvents = function () {\n    window.addEventListener('load', () => { this.handleResize() })\n    window.addEventListener('resize', () => { this.handleResize() })\n    if (this.options.playable) {\n      setTimeout(() => { this.createPeer() }, 1000)\n      window.addEventListener('keydown', (e) => { this.handleKeyboardEvent(e) })\n      window.addEventListener('keyup', (e) => { this.handleKeyboardEvent(e) })\n    }\n  }\n\n  this.createTetrisGame = function () {\n    this.tetris = new Tetris({\n      drawableBackground: this.background,\n      drawablePieces: this.pieces\n    })\n  }\n\n  this.createHtmlElements = function () {\n    let element = document.createElement('div')\n    if (this.options.half) {\n      element.className = 'tetris-container-half'\n    } else {\n      element.className = 'tetris-container'\n    }\n    parent.appendChild(element)\n    let elementInner = document.createElement('div')\n    elementInner.className = 'tetris-container-inner'\n    element.appendChild(elementInner)\n    this.element = element\n    this.elementInner = elementInner\n  }\n\n  this.createDrawables = function () {\n    this.background = new Drawable()\n    this.pieces = new Drawable()\n    this.background.createAndAppend(this.elementInner)\n    this.pieces.createAndAppend(this.elementInner)\n  }\n\n  this.handleResize = function () {\n    let size = getElementSize(this.element)\n    let blockSize = size.height / this.tetris.options.groundHeight\n    if (blockSize * this.tetris.options.groundWidth > size.width) {\n      // blocksize exceed width crop using width\n      blockSize = size.width / this.tetris.options.groundWidth\n    }\n    blockSize = parseInt(blockSize)\n    size = {\n      width: this.tetris.options.groundWidth * blockSize,\n      height: this.tetris.options.groundHeight * blockSize\n    }\n    // resize drawables\n    this.background.resize(size)\n    this.pieces.resize(size)\n    // resize game\n    this.tetris.resize(blockSize)\n  }\n\n  this.moveDown = throttle(function () { this.tetris.pieceMoveDown() }.bind(this), 40)\n  this.moveLeft = throttle(function () { this.tetris.pieceMoveLeft() }.bind(this), 100)\n  this.moveRight = throttle(function () { this.tetris.pieceMoveRight() }.bind(this), 100)\n\n  this.handleKeyboardEvent = function (event) {\n    switch (event.which) {\n      case 80:\n        // P\n        if (event.type === 'keyup') {}\n        break\n      case 37:\n        // left\n        if (event.type === 'keydown') {\n          this.moveLeft()\n        }\n        break\n      case 38:\n        // up\n        if (event.type === 'keyup') {\n          this.tetris.rotatePieceCounterClockwise()\n        }\n        break\n      case 39:\n        // right\n        if (event.type === 'keydown') {\n          this.moveRight()\n        }\n        break\n      case 82:\n        // R\n        this.tetris.reset()\n        break\n      case 40:\n        // down\n        this.moveDown()\n        break\n      case 32:\n        // space\n        if (event.type === 'keyup') {\n          this.tetris.rotatePieceCounterClockwise()\n        }\n        break\n      case 78:\n        // n\n        if (event.type === 'keyup') {\n          let name = window.prompt('I the other name')\n          this.connect(name)\n        }\n        break\n      default:\n        console.log('which', event.which)\n        break\n    }\n  }.bind(this)\n\n  // networking\n  this.sendGroundLoop = function (conn) {\n    clearInterval(this.sendGroundLoopInterval)\n    this.sendGroundLoopInterval = setInterval(() => {\n      conn.send(\n        this.tetris.serialize()\n      )\n    }, 1000)\n  }\n\n  this.connect = function (anotherName) {\n    let conn = this.peer.connect('zIKosj1p' + anotherName)\n    conn.on('open', () => {\n      this.addReplica(conn)\n    })\n  }\n\n  this.startPieceMoveDownLoop = function () {\n    setInterval(() => {\n      this.tetris.pieceMoveDown({ auto: true })\n    }, 800)\n  }\n\n  this.startDrawLoop = function () {\n    setInterval(() => {\n      this.tetris.draw()\n    }, 30) // 40fps\n  }\n\n  this.createPeer = function () {\n    this.name = window.prompt('I need your name')\n    this.peer = new Peer('zIKosj1p' + this.name)\n    this.peer.on('connection', (conn) => {\n      this.addReplica(conn)\n    })\n  }\n  this.initialize()\n}\n\nexport default HTMLTetrisGame\n","import './main.css'\nimport Game from './htmlgame'\n\nvar parent = document.getElementById('main-tetris')\nlet game = new Game(\n  parent,\n  {\n    playable: true\n  }\n)\n\nexport default () => {}\n","// import another component\nimport main from './main'\n\nmain()\n"]}